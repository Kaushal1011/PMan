{"version":3,"sources":["components/img/browndesk.jpg","components/img/background.jpg","components/components/Title.jsx","components/components/Copyright.jsx","components/queries.jsx","components/Signup.jsx","components/Login.jsx","components/components/Header.jsx","components/components/Footer.jsx","components/DashBoard.jsx","components/assets/listelemproj.jsx","components/components/ProjectList.jsx","components/assets/listfileproj.jsx","components/assets/listdelfile.jsx","components/components/DeleteFile.jsx","components/components/EditProject.jsx","components/components/ProjectFileManager.jsx","components/assets/listelemtask.jsx","components/components/TasksList.jsx","components/components/EditTask.jsx","components/components/TaskView.jsx","components/assets/listdeltask.jsx","components/components/DeleteTask.jsx","components/assets/listseltask.jsx","components/components/AddTask.jsx","components/components/TaskManagerProj.jsx","components/assets/listnotes.jsx","components/components/AddNote.jsx","components/components/DeleteNote.jsx","components/components/NotesList.jsx","components/components/ProjectsPage.jsx","components/components/AddProject.jsx","components/assets/listdelproj.jsx","components/components/DeleteProject.jsx","components/Projects.jsx","components/Tasks.jsx","components/assets/listprojrep.jsx","components/PieChart.jsx","components/Reports.jsx","components/Recharts.jsx","components/Analytics.jsx","components/Settings.jsx","components/Profiles.jsx","App.js","serviceWorker.js","index.js"],"names":["module","exports","Title","Typography","component","variant","style","textAlign","paddingTop","Copyright","color","align","Link","href","Date","getFullYear","link","HttpLink","uri","createUser","gql","authenticate","getUser","myNotes","getTask","preqTask","projectNotes","myProjects","getProject","myTasks","ProjectTasks","addNote","delNote","createProject","editProject","deleteProject","deleteMember","addTask","updateTask","deleteTask","completeTask","changePassword","changeName","getUserReport","getProjectReport","getProjectAnalytics","getCumulativeProjectAnalytics","useStyles","createStyles","theme","paper","marginTop","spacing","display","flexDirection","alignItems","avatar","margin","backgroundColor","palette","secondary","main","form","width","submit","SignUp","props","state","first_name","last_name","email","username","password","signup","message","handleClick","bind","event","preventDefault","operation","query","variables","firstname","this","lastname","emailid","makePromise","execute","then","data","console","log","status","alert","success","setState","error","msg","catch","classes","to","pathname","Container","maxWidth","CssBaseline","className","Avatar","noValidate","Grid","container","item","xs","sm","TextField","autoComplete","name","required","fullWidth","id","label","autoFocus","onChange","target","value","helperText","type","Button","onClick","justify","Box","mt","React","Component","withAlert","withStyles","SignIn","authenticated","makeStyles","root","toolbar","paddingRight","toolbarIcon","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","breakpoints","up","appBarSpacer","content","height","overflow","paddingBottom","fixedHeight","Header","useState","open","setOpen","mainListItems","ListItem","button","ListItemIcon","ListItemText","primary","pagename","AppBar","clsx","Toolbar","IconButton","edge","aria-label","noWrap","string","Drawer","Divider","List","FooterPaper","Paper","buttondiv","fontSize","left","right","top","bottom","innerpaper","background","backgroundImage","backgrondimage","backgroundSize","backgroundRepeat","Dashboard","undefined","location","fixedHeightPaper","fixedHeightPaper1","fixedHeightPaper2","md","lg","textTransform","size","pt","Listelemproj","render","handleToUpdate","project","projectid","ListItemAvatar","direction","shortdescription","createdon","createdby","list","ProjectList","projectlist","redirect","someArg","prevProps","prevState","ListElement","listItems1","ongoing","concat","completed","map","projectson","listItems2","projectscom","Tabs","indicatorColor","textColor","centered","Tab","Listfileproj","filelist","files","fileid","filename","lastupdated","Listdelfile","del","selected","info","file","ListItemSecondaryAction","Checkbox","checked","okay","index","indexOf","splice","DeleteProject","deleteflag","handleUpdate","number","EditProject","date","path","description","members","memberstring","deletemember","role","JSON","parse","e","ld","sd","operationdel","member","today","dd","String","getDate","padStart","mm","getMonth","yyyy","multiline","defaultValue","inputProps","readOnly","stringify","divforbutton","buttonclass","grid","listroot","ProjectFileManager","viewname","filestoupload","handlePage","mid","Fab","onSave","handleSave","showPreviews","maxFileSize","onClose","handleClose","user","DeleteFile","Listelemtask","task","taskid","starttime","assignedby","TaskList","tasklist","all","taskall","active","inactive","working","scrollButtons","EditTask","endtime","status_type","completiontime","priority_type","assignedto","preqtaskid","states","enddate","priority","select","option","MenuItem","key","split","TaskView","preqtask","preqtasklist","loaded","pageUpdate","fetchData","completetask","operation4","operation1","a","x","operation2","push","low","Listdeltask","startdate","DeleteTask","tasks","projid","Listseltask","sel","AddTask","task_title","preqid","preqammout","fetchTasksFilter","taskFilter","tomorrow","setDate","dd1","mm1","yyyy1","listtask","FormControl","extendedIcon","headinger","TaskManagerProj","fetchalldata","Filter","pos","marginBottom","Listnotes","notes","Card","CardContent","gutterBottom","CardActions","AddNote","fetchmethod","DeleteNote","notesid","noteid","deleteNote","NotesList","action","body","maxheightpaper","ProjectsPage","longdescription","current","projectmid","AddProject","Listdelproj","projects","Projects","fetchdata","projectid1","projectFilter","maincontent","aftermid","Tasks","fetchDataFilter","Listprojrep","COLORS","PC","onMouseEnter","onPieEnter","cx","cy","innerRadius","outerRadius","fill","paddingAngle","dataKey","entry","length","PureComponent","Reports","completedbefore","completedafter","total","pactive","pinactive","pcompleted","pcompletedbefore","pcompletedafter","ptotal","innerpagename","projectname","loadedproject","fetchProjects","fetchUserReport","handleProjectSelection","inative","completedBefore","completedAfter","pworking","projectinner","vairant","Rechart","strokeDasharray","stroke","activeDot","r","jsfiddleUrl","Analytics","datapa","datapca","loadedstate","midpage","browndesk","Settings","newpassword","oldpassword","handleClickName","handleClickPassword","newfirstname","newlastname","backpaper","Profiles","options","timeout","positions","BOTTOM_CENTER","offset","AlertTemplate","close","Alert","severity","createMuiTheme","red","blue","danger","App","template","ThemeProvider","Login","DashBoard","Boolean","window","hostname","match","ReactDOM","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.7fe92ec6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/browndesk.820f2c1b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/background.6d30569f.jpg\";","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\n\nfunction Title() {\n  return (\n    <Typography\n      component=\"h1\"\n      variant=\"h1\"\n      style={{ textAlign: \"center\", paddingTop: \"50px\" }}\n    >\n      Project Manager\n    </Typography>\n  );\n}\n\nexport default Title;\n","import React from \"react\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Link from \"@material-ui/core/Link\";\n\nfunction Copyright() {\n  return (\n    <Typography variant=\"body1\" color=\"textSecondary\" align=\"center\">\n      {\"Copyright © \"}\n      <Link color=\"inherit\" href=\"https://github.com/Python-Secret-Underground\">\n        PSU\n      </Link>{\" \"}\n      {new Date().getFullYear()}\n      {\".\"}\n    </Typography>\n  );\n}\n\nexport default Copyright;\n","import { gql } from \"apollo-boost\";\nimport { HttpLink } from \"apollo-link-http\";\nconst uri = \"https://api.psuprojectmanager.ml/graphql-api\";\nexport const link = new HttpLink({ uri });\nexport const createUser = gql`\n  mutation(\n    $firstname: String!\n    $lastname: String!\n    $username: String!\n    $emailid: String!\n    $password: String!\n  ) {\n    createUser(\n      firstname: $firstname\n      lastname: $lastname\n      username: $username\n      emailid: $emailid\n      password: $password\n    ) {\n      msg\n      status\n    }\n  }\n`;\nexport const authenticate = gql`\n  query($username: String!, $password: String!) {\n    authenticate(username: $username, password: $password)\n  }\n`;\n\nexport const getUser = gql`\n  query($username: String!) {\n    getUser(username: $username) {\n      firstname\n      lastname\n      email\n    }\n  }\n`;\n\nexport const myNotes = gql`\n  query($username: String!) {\n    myNotes(username: $username) {\n      noteid\n      title\n      description\n      color\n      createdby\n      createdat\n    }\n  }\n`;\n\nexport const getTask = gql`\n  query($taskid: Int!) {\n    getTask(taskid: $taskid) {\n      taskid\n      title\n      description\n      starttime\n      endtime\n      completiontime\n      status\n      priority\n      projectid\n      assignedby\n      assignedto {\n        username\n      }\n      preqtask\n    }\n  }\n`;\n\nexport const preqTask = gql`\n  query($taskid: Int!) {\n    getTask(taskid: $taskid) {\n      taskid\n      title\n      description\n      status\n      priority\n    }\n  }\n`;\n\nexport const projectNotes = gql`\n  query($projectid: Int!) {\n    projectNotes(projectid: $projectid) {\n      noteid\n      title\n      description\n      color\n      createdby\n      createdat\n    }\n  }\n`;\n\nexport const myProjects = gql`\n  query($username: String!, $projectFilter: String) {\n    myProjects(username: $username, projectFilter: $projectFilter) {\n      projectid\n      name\n      shortdescription\n      longdescription\n      createdon\n      path\n      createdby {\n        username\n      }\n      members {\n        user {\n          username\n        }\n        role\n      }\n    }\n  }\n`;\n\nexport const getProject = gql`\n  query($username: String!, $projectid: Int!) {\n    getProject(username: $username, projectid: $projectid) {\n      projectid\n      name\n      shortdescription\n      longdescription\n      createdon\n      path\n      createdby {\n        username\n      }\n      members {\n        user {\n          username\n        }\n        role\n      }\n    }\n  }\n`;\n\nexport const myTasks = gql`\n  query($username: String!, $taskFilter: String) {\n    myTasks(username: $username, taskFilter: $taskFilter) {\n      taskid\n      title\n      description\n      starttime\n      endtime\n      completiontime\n      status\n      priority\n      projectid\n      assignedby\n      assignedto {\n        username\n        firstname\n        lastname\n        email\n      }\n      preqtask\n    }\n  }\n`;\n\nexport const ProjectTasks = gql`\n  query($username: String!, $projectid: Int!, $taskFilter: String) {\n    ProjectTasks(\n      username: $username\n      projectid: $projectid\n      taskFilter: $taskFilter\n    ) {\n      taskid\n      title\n      description\n      starttime\n      endtime\n      completiontime\n      status\n      priority\n      projectid\n      assignedby\n      assignedto {\n        username\n      }\n      preqtask\n    }\n  }\n`;\n\nexport const addNote = gql`\n  mutation(\n    $title: String!\n    $color: String!\n    $description: String!\n    $username: String!\n    $projectid: Int\n  ) {\n    addNote(\n      title: $title\n      color: $color\n      description: $description\n      username: $username\n      projectid: $projectid\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const addNoteproj = gql`\n  mutation(\n    $title: String!\n    $color: String!\n    $description: String!\n    $username: String!\n    $projectid: Int\n  ) {\n    addNote(\n      title: $title\n      color: $color\n      description: $description\n      username: $username\n      projectid: $projectid\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const delNote = gql`\n  mutation($username: String!, $noteid: Int!) {\n    deleteNote(noteid: $noteid, username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const createProject = gql`\n  mutation(\n    $ld: String\n    $name: String!\n    $path: String\n    $sd: String\n    $username: String!\n    $members: [InputMember]\n  ) {\n    createProject(\n      longdescription: $ld\n      members: $members\n      name: $name\n      path: $path\n      shortdescription: $sd\n      username: $username\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const delUser = gql`\n  mutation($username: String!) {\n    deleteUser(username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const editProject = gql`\n  mutation(\n    $ld: String\n    $name: String!\n    $path: String\n    $sd: String\n    $username: String!\n    $members: [InputMember]\n    $projectid: Int!\n  ) {\n    editProject(\n      longdescription: $ld\n      members: $members\n      name: $name\n      path: $path\n      shortdescription: $sd\n      username: $username\n      projectid: $projectid\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const deleteProject = gql`\n  mutation($projectid: Int!, $username: String!) {\n    deleteProject(projectid: $projectid, username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const deleteMember = gql`\n  mutation($member: String!, $projectid: Int!, $username: String!) {\n    deleteMember(member: $member, projectid: $projectid, username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const addTask = gql`\n  mutation(\n    $assignedby: String!\n    $assignedto: [String!]!\n    $description: String\n    $enddate: DateTime\n    $preqtaskid: [Int!]\n    $priority: String\n    $projectid: Int!\n    $title: String!\n  ) {\n    addTask(\n      assignedby: $assignedby\n      assignedto: $assignedto\n      description: $description\n      enddate: $enddate\n      preqtaskid: $preqtaskid\n      priority: $priority\n      projectid: $projectid\n      title: $title\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const updateTask = gql`\n  mutation(\n    $assignedto: [String!]!\n    $description: String\n    $endtime: DateTime\n    $priority: String\n    $taskid: Int!\n    $title: String!\n    $username: String!\n  ) {\n    updateTask(\n      assignedto: $assignedto\n      description: $description\n      endtime: $endtime\n      priority: $priority\n      taskid: $taskid\n      title: $title\n      username: $username\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const deleteTask = gql`\n  mutation($taskid: Int!, $username: String!) {\n    deleteTask(taskid: $taskid, username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const completeTask = gql`\n  mutation($taskid: Int!, $username: String!) {\n    completeTask(taskid: $taskid, username: $username) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const changePassword = gql`\n  mutation($newpassword: String!, $oldpassword: String!, $username: String!) {\n    changePassword(\n      newpassword: $newpassword\n      oldpassword: $oldpassword\n      username: $username\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const changeName = gql`\n  mutation($newfirstname: String!, $newlastname: String!, $username: String!) {\n    changeName(\n      newfirstname: $newfirstname\n      newlastname: $newlastname\n      username: $username\n    ) {\n      status\n      msg\n    }\n  }\n`;\n\nexport const getUserReport = gql`\n  query($username: String!) {\n    getUserReport(username: $username) {\n      username\n      inactive\n      active\n      working\n      completed\n      completedBefore\n      completedAfter\n      total\n    }\n  }\n`;\n\nexport const getProjectReport = gql`\n  query($projectid: Int!) {\n    getProjectReport(projectid: $projectid) {\n      inactive\n      active\n      total\n      completed\n      completedBefore\n      completedAfter\n      working\n    }\n  }\n`;\nexport const getUserwiseProjectReport = gql`\n  query($projectid: Int!) {\n    getUserwiseProjectReport(projectid: $projectid) {\n      UserReport {\n        username\n        inactive\n        working\n        completed\n        completedBefore\n        completedAfter\n        total\n      }\n    }\n  }\n`;\n\nexport const getProjectAnalytics = gql`\n  query($projectid: Int!, $startdate: Date!, $enddate: Date!) {\n    getProjectAnalytics(\n      projectid: $projectid\n      startdate: $startdate\n      enddate: $enddate\n    ) {\n      date\n      newTask\n      Taskcompleted\n    }\n  }\n`;\n\nexport const getCumulativeProjectAnalytics = gql`\n  query($projectid: Int!, $startdate: Date!, $enddate: Date!) {\n    getCumulativeProjectAnalytics(\n      projectid: $projectid\n      startdate: $startdate\n      enddate: $enddate\n    ) {\n      date\n      newTask\n      Taskcompleted\n    }\n  }\n`;\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Title from \"./components/Title\";\nimport PropTypes from \"prop-types\";\nimport { Redirect } from \"react-router-dom\";\nimport Copyright from \"./components/Copyright\";\n// import { gql } from \"apollo-boost\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { createUser, link } from \"./queries\";\nimport { withAlert } from \"react-alert\";\n\nconst useStyles = createStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(3),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\n// const createUser = gql`\n//   mutation(\n//     $firstname: String!\n//     $lastname: String!\n//     $username: String!\n//     $emailid: String!\n//     $password: String!\n//   ) {\n//     createUser(\n//       firstname: $firstname\n//       lastname: $lastname\n//       username: $username\n//       emailid: $emailid\n//       password: $password\n//     ) {\n//       msg\n//       status\n//     }\n//   }\n// `;\n\nclass SignUp extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      first_name: \"\",\n      last_name: \"\",\n      email: \"\",\n      username: \"\",\n      password: \"\",\n      signup: false,\n      // mutatatefunc: null,\n      message: \"\",\n      // data: [],\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    //call mutation query for graphql here\n    event.preventDefault();\n    const operation = {\n      query: createUser,\n      variables: {\n        firstname: this.state.first_name,\n        lastname: this.state.last_name,\n        emailid: this.state.email,\n        username: this.state.username,\n        password: this.state.password,\n      }, //optional\n    };\n\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.createUser.status === true) {\n          this.props.alert.success(\"Created User Succesfully\");\n          this.setState({ signup: data.data.createUser.status });\n        } else {\n          this.props.alert.error(data.data.createUser.msg);\n        }\n        this.setState({ message: data.data.createUser.msg });\n\n        // console.log(data.data.createUser.status);\n        // console.log(data.createUser.status);\n        console.log(this.state.signup);\n        console.log(this.state.message);\n      })\n      .catch((error) => console.log(`received error ${error}`));\n\n    // You can also easily pass variables for dynamic arguments\n\n    // this.setState({ signup: signupsucess });\n  }\n  render() {\n    const { classes } = this.props;\n    if (this.state.signup) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n          }}\n        />\n      );\n    }\n\n    return (\n      <Container component=\"main\" maxWidth=\"lg\">\n        <Title />\n        <Container component=\"main\" maxWidth=\"sm\">\n          <CssBaseline />\n\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign up\n            </Typography>\n            <form className={classes.form} noValidate>\n              <Grid container spacing={2}>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    autoComplete=\"fname\"\n                    name=\"firstName\"\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"firstName\"\n                    label=\"First Name\"\n                    autoFocus\n                    onChange={(event) =>\n                      this.setState({ first_name: event.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12} sm={6}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"lastName\"\n                    label=\"Last Name\"\n                    name=\"lastName\"\n                    autoComplete=\"lname\"\n                    onChange={(event) =>\n                      this.setState({ last_name: event.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"username\"\n                    label=\"username\"\n                    name=\"username\"\n                    autoComplete=\"username\"\n                    onChange={(event) =>\n                      this.setState({ username: event.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    id=\"email\"\n                    label=\"email\"\n                    name=\"email\"\n                    autoComplete=\"email\"\n                    onChange={(event) =>\n                      this.setState({ email: event.target.value })\n                    }\n                  />\n                </Grid>\n                <Grid item xs={12}>\n                  <TextField\n                    variant=\"outlined\"\n                    required\n                    fullWidth\n                    name=\"password\"\n                    label=\"Password\"\n                    helperText=\"8 letters and 1 capital, 1 Numeric compulsory\"\n                    type=\"password\"\n                    id=\"password\"\n                    autoComplete=\"current-password\"\n                    onChange={(event) =>\n                      this.setState({ password: event.target.value })\n                    }\n                  />\n                </Grid>\n              </Grid>\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(event) => this.handleClick(event)}\n              >\n                Sign Up\n              </Button>\n              <Grid container justify=\"flex-end\">\n                <Grid item>\n                  <Link to={{ pathname: \"/login\" }} variant=\"body2\">\n                    Already have an account? Sign in\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={5}>\n            <Copyright />\n          </Box>\n        </Container>\n      </Container>\n    );\n  }\n}\nSignUp.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\n\nexport default withAlert()(withStyles(useStyles)(SignUp));\n","import React from \"react\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Button from \"@material-ui/core/Button\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport TextField from \"@material-ui/core/TextField\";\nimport PropTypes from \"prop-types\";\nimport { Link } from \"react-router-dom\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport LockOutlinedIcon from \"@material-ui/icons/LockOutlined\";\nimport Typography from \"@material-ui/core/Typography\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Container from \"@material-ui/core/Container\";\nimport Title from \"./components/Title\";\nimport { Redirect } from \"react-router-dom\";\nimport Copyright from \"./components/Copyright\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { authenticate, link } from \"./queries\";\n\n// import { useAlert } from \"react-alert\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  paper: {\n    marginTop: theme.spacing(8),\n    display: \"flex\",\n    flexDirection: \"column\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  form: {\n    width: \"100%\", // Fix IE 11 issue.\n    marginTop: theme.spacing(1),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nclass SignIn extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      password: \"\",\n      authenticated: false,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  handleClick(event) {\n    event.preventDefault();\n    console.log(this.state.username);\n    console.log(this.state.password);\n    const operation = {\n      query: authenticate,\n      variables: {\n        username: this.state.username,\n        password: this.state.password,\n      }, //optional\n    };\n\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.authenticate === true) {\n          this.props.alert.success(\"Login Successfull\");\n\n          this.setState({ authenticated: true });\n        } else {\n          this.props.alert.error(\"Login Failed username or password wrong\");\n        }\n      })\n      .catch((error) => console.log(`received error ${error}`));\n  }\n\n  render() {\n    const { classes } = this.props;\n\n    if (this.state.authenticated) {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/dashboard\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n    return (\n      <Container component=\"main\" maxWidth=\"lg\">\n        <Title />\n        <Container component=\"main\" maxWidth=\"sm\">\n          <CssBaseline />\n          <div className={classes.paper}>\n            <Avatar className={classes.avatar}>\n              <LockOutlinedIcon />\n            </Avatar>\n            <Typography component=\"h1\" variant=\"h5\">\n              Sign in\n            </Typography>\n            <form className={classes.form} noValidate>\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                id=\"username\"\n                label=\"username\"\n                name=\"username\"\n                autoComplete=\"username\"\n                autoFocus\n                onChange={(event) =>\n                  this.setState({ username: event.target.value })\n                }\n              />\n              <TextField\n                variant=\"outlined\"\n                margin=\"normal\"\n                required\n                fullWidth\n                name=\"password\"\n                label=\"Password\"\n                type=\"password\"\n                id=\"password\"\n                autoComplete=\"current-password\"\n                onChange={(event) =>\n                  this.setState({ password: event.target.value })\n                }\n              />\n              <Button\n                type=\"submit\"\n                fullWidth\n                variant=\"contained\"\n                color=\"primary\"\n                className={classes.submit}\n                onClick={(event) => this.handleClick(event)}\n              >\n                Sign In\n              </Button>\n              <Grid container>\n                <Grid item xs>\n                  <Link href=\"#\" variant=\"body2\">\n                    Forgot password?\n                  </Link>\n                </Grid>\n                <Grid item>\n                  <Link to={{ pathname: \"/signup\" }} variant=\"body2\">\n                    {\"Don't have an account? Sign Up\"}\n                  </Link>\n                </Grid>\n              </Grid>\n            </form>\n          </div>\n          <Box mt={8}>\n            <Copyright />\n          </Box>\n        </Container>\n      </Container>\n    );\n  }\n}\n\nSignIn.propTypes = {\n  classes: PropTypes.object.isRequired,\n};\nexport default withAlert()(withStyles(useStyles)(SignIn));\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Drawer from \"@material-ui/core/Drawer\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport ChevronLeftIcon from \"@material-ui/icons/ChevronLeft\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemIcon from \"@material-ui/core/ListItemIcon\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport DashboardIcon from \"@material-ui/icons/Dashboard\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentReturnedIcon from \"@material-ui/icons/AssignmentReturned\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport { Link } from \"react-router-dom\";\nimport { Link as MaterialLink } from \"@material-ui/core\";\nimport ExitToAppIcon from \"@material-ui/icons/ExitToApp\";\n\nconst drawerWidth = 240;\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    whiteSpace: \"nowrap\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nexport default function Header(props) {\n  const classes = useStyles();\n  const [open, setOpen] = React.useState(false);\n  const handleDrawerOpen = () => {\n    setOpen(true);\n  };\n  const handleDrawerClose = () => {\n    setOpen(false);\n  };\n  const mainListItems = (\n    <div>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/dashboard\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <DashboardIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Dashboard\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/projects\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n              pagename: \"projects\",\n            },\n          }}\n          // onClick={() => window.location.reload()}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <AssignmentReturnedIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Projects\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/tasks\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <DescriptionIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Tasks\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/reports\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <LayersIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Reports\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/analytics\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <BarChartIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Analytics\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/settings\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <SettingsIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Settings\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/profile\",\n            state: {\n              username: props.username,\n              authenticated: props.authenticated,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <PeopleIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"Profile\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n      <MaterialLink>\n        <Link\n          to={{\n            pathname: \"/login\",\n            state: {\n              username: \"\",\n              authenticated: false,\n            },\n          }}\n        >\n          <ListItem button>\n            <ListItemIcon>\n              <ExitToAppIcon />\n            </ListItemIcon>\n            <ListItemText primary=\"logout\" />\n          </ListItem>\n        </Link>\n      </MaterialLink>\n    </div>\n  );\n\n  return (\n    <div className={classes.root}>\n      <CssBaseline />\n      <AppBar\n        position=\"absolute\"\n        className={clsx(classes.appBar, open && classes.appBarShift)}\n      >\n        <Toolbar className={classes.toolbar}>\n          <IconButton\n            edge=\"start\"\n            color=\"inherit\"\n            aria-label=\"open drawer\"\n            onClick={handleDrawerOpen}\n            className={clsx(\n              classes.menuButton,\n              open && classes.menuButtonHidden\n            )}\n          >\n            <MenuIcon />\n          </IconButton>\n          <Typography\n            component=\"h1\"\n            variant=\"h6\"\n            color=\"inherit\"\n            noWrap\n            className={classes.title}\n          >\n            Project Manager\n          </Typography>\n          {/* <IconButton color=\"inherit\"> */}\n          <Typography>{props.string}</Typography>\n          {/* </IconButton> */}\n        </Toolbar>\n      </AppBar>\n\n      <Drawer\n        variant=\"permanent\"\n        classes={{\n          paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        <List>{mainListItems}</List>\n        <Divider />\n      </Drawer>\n    </div>\n  );\n}\n","import React from \"react\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Grid from \"@material-ui/core/Grid\";\nimport makeStyles from \"@material-ui/core/styles/makeStyles\";\nimport Typography from \"@material-ui/core/Typography\";\nconst useStyles = makeStyles((theme) => ({\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n}));\n\nexport default function FooterPaper() {\n  const classes = useStyles();\n  return (\n    <Grid item xs={12}>\n      <Paper className={classes.paper}>\n        <Typography variant=\"h6\" component=\"h2\">\n          <div style={{ display: \"flex\" }}>\n            {/* A Project by <a href=\"https://github.com/Kaushal1011\">Kaushal</a>,\"\n            \"<a href=\"https://github.com/arpitvaghela\">Arpit</a>\" \"&\" \"\n            <a href=\"https://github.com/dhruvildave\">Dhruvil</a>. */}\n            A Project on DBMS By Kaushal, Arpit and Dhruvil.\n          </div>\n        </Typography>\n      </Paper>\n    </Grid>\n  );\n}\n","import React from \"react\";\nimport clsx from \"clsx\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Button from \"@material-ui/core/Button\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Header from \"./components/Header\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport BarChartIcon from \"@material-ui/icons/BarChart\";\nimport LayersIcon from \"@material-ui/icons/Layers\";\nimport DescriptionIcon from \"@material-ui/icons/Description\";\nimport AssignmentReturnedIcon from \"@material-ui/icons/AssignmentReturned\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Footer from \"./components/Footer\";\nimport { Redirect } from \"react-router-dom\";\nimport backgrondimage from \"./img/background.jpg\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { getUser, link } from \"./queries\";\nimport { withAlert } from \"react-alert\";\nimport { Typography } from \"@material-ui/core\";\nconst drawerWidth = 240;\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"flex-end\",\n    padding: \"0 8px\",\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  appBarShift: {\n    marginLeft: drawerWidth,\n    width: `calc(100% - ${drawerWidth}px)`,\n    transition: theme.transitions.create([\"width\", \"margin\"], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  buttondiv: {\n    textAlign: \"center\",\n    display: \"flex\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"24\",\n    padding: \"3%\",\n    // flexDirection: \"row\",\n  },\n  menuButton: {\n    padding: \"7%\",\n    textAlign: \"center\",\n    display: \"flex\",\n    width: \"lg\",\n    left: 0,\n    right: 0,\n    top: 0,\n    bottom: 0,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    fontSize: \"27px\",\n    marginLeft: theme.spacing(1),\n    marginRight: theme.spacing(1),\n    // size: \"medium\",\n    // background: \"#FF0000\",\n  },\n  menuButtonHidden: {\n    display: \"none\",\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaper: {\n    position: \"relative\",\n    width: drawerWidth,\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.enteringScreen,\n    }),\n  },\n  drawerPaperClose: {\n    overflowX: \"hidden\",\n    transition: theme.transitions.create(\"width\", {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up(\"sm\")]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  innerpaper: {\n    display: \"flex\",\n    width: \"100%\",\n    // maxWidth: \"100%\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Dashboard extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"dashboard\",\n      firstname: \"\",\n      lastname: \"\",\n      emailid: \"\",\n    };\n\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n    const operation = {\n      query: getUser,\n      variables: {\n        username: this.props.location.state.username,\n      }, //optional\n    };\n    console.log(this.state.username);\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        if (data.data.getUser) {\n          this.setState({\n            firstname: data.data.getUser.firstname,\n            lastname: data.data.getUser.lastname,\n            emailid: data.data.getUser.email,\n          });\n        } else {\n          this.props.alert.error(\"cannot fetch user data\");\n        }\n      })\n      .catch((error) => this.props.alert.error(`received error ${error}`));\n  }\n  componentDidMount() {\n    // console.log(this.state.username);\n    // console.log(this.state.authenticated);\n  }\n  render() {\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    if (this.state.pagename === \"projects\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/projects\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n              pagename: \"projects\",\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"tasks\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/tasks\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"logout\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/login\",\n            state: {\n              username: \"\",\n              authenticated: false,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"reports\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/reports\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"analytics\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/analytics\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"settings\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/settings\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n    if (this.state.pagename === \"profiles\") {\n      return (\n        <Redirect\n          to={{\n            pathname: \"/profile\",\n            state: {\n              username: this.state.username,\n              authenticated: this.state.authenticated,\n            },\n          }}\n        />\n      );\n    }\n\n    if (this.state.pagename === \"dashboard\") {\n      const { classes } = this.props;\n      const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n      const fixedHeightPaper1 = clsx(\n        classes.paper,\n        classes.fixedHeight,\n        classes.background\n      );\n      const fixedHeightPaper2 = clsx(\n        classes.paper,\n        classes.fixedHeight,\n        classes.innerpaper\n      );\n      return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <Header\n            string={\"User:\" + this.state.username}\n            username={this.state.username}\n            authenticated={this.state.authenticated}\n          />\n\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"xl\" className={classes.container}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} md={8} lg={9}>\n                  <Paper className={fixedHeightPaper1}>\n                    <Grid container item xs={12} sm={6} justify=\"center\">\n                      <Paper className={fixedHeightPaper2}>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#ED6A5A\", textTransform: \"none\" }}\n                            size=\"medium\"\n                            onClick={() =>\n                              this.setState({ pagename: \"projects\" })\n                            }\n                          >\n                            <AssignmentReturnedIcon\n                              style={{ fontSize: 40, marginRight: \"20%\" }}\n                            />\n                            Projects\n                          </Button>\n                        </div>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() => this.setState({ pagename: \"tasks\" })}\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#5BC0EB\", textTransform: \"none\" }}\n                          >\n                            <DescriptionIcon\n                              style={{ fontSize: 40, marginRight: \"20%\" }}\n                            />\n                            Tasks\n                          </Button>\n                        </div>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() =>\n                              this.setState({ pagename: \"reports\" })\n                            }\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#9BC53D\", textTransform: \"none\" }}\n                          >\n                            <LayersIcon\n                              style={{ fontSize: 40, marginRight: \"20%\" }}\n                            />\n                            Reports\n                          </Button>\n                        </div>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() =>\n                              this.setState({ pagename: \"analytics\" })\n                            }\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#E43F6F\", textTransform: \"none\" }}\n                          >\n                            <BarChartIcon\n                              style={{ fontSize: 40, marginRight: \"20%\" }}\n                            />\n                            Analytics\n                          </Button>\n                        </div>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() =>\n                              this.setState({ pagename: \"profiles\" })\n                            }\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#4F2FA8\", textTransform: \"none\" }}\n                          >\n                            <PeopleIcon\n                              style={{\n                                fontSize: 40,\n                                marginRight: \"20%\",\n                              }}\n                            />\n                            Profile\n                          </Button>\n                        </div>\n                        <div className={classes.buttondiv}>\n                          <Button\n                            edge=\"start\"\n                            color=\"secondary\"\n                            aria-label=\"open drawer\"\n                            onClick={() =>\n                              this.setState({ pagename: \"settings\" })\n                            }\n                            className={clsx(classes.menuButton)}\n                            style={{ color: \"#342E37\", textTransform: \"none\" }}\n                          >\n                            <SettingsIcon\n                              style={{ fontSize: 40, marginRight: \"20%\" }}\n                            />\n                            Settings\n                          </Button>\n                        </div>\n                      </Paper>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <Grid item xs={12} md={4} lg={3}>\n                  <Paper className={fixedHeightPaper}>\n                    <Avatar className={classes.avatar}>\n                      <PeopleIcon />\n                    </Avatar>\n                    <Typography variant=\"h6\">\n                      <br></br>\n                      Profile Info:<br></br> Name:\n                      {this.state.firstname + ` ` + this.state.lastname}{\" \"}\n                      <br></br> Email: {this.state.emailid}\n                      <br></br> Username:{this.state.username}\n                    </Typography>\n                  </Paper>\n                </Grid>\n                <Footer />\n              </Grid>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </div>\n      );\n    }\n  }\n}\nexport default withAlert()(withStyles(useStyles)(Dashboard));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nclass Listelemproj extends React.Component {\n  componentDidUpdate() {\n    this.render();\n  }\n\n  render() {\n    const { classes } = this.props;\n    return (\n      <ListItem\n        button\n        onClick={() => this.props.handleToUpdate(this.props.project.projectid)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Grid container direction=\"column\">\n          <Typography variant=\"h6\">{this.props.project.name}</Typography>\n\n          <ListItemText\n            primary={this.props.project.shortdescription}\n            secondary={\n              `Started: ` +\n              this.props.project.createdon +\n              ` Created By: ` +\n              this.props.project.createdby.username\n            }\n          ></ListItemText>\n          {/* <Card project={this.props.project}></Card> */}\n        </Grid>\n      </ListItem>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Listelemproj);\n","import React from \"react\";\nimport { withStyles, Grid } from \"@material-ui/core\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport List from \"@material-ui/core/List\";\nimport Listelemproj from \"../assets/listelemproj\";\n// import Card from \"./Card\";\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n    width: \"90%\",\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n}));\n\nclass ProjectList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      projectlist: this.props.projectlist,\n      projectid: 42069,\n      redirect: 0,\n    };\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n  }\n\n  handleToUpdate(someArg) {\n    this.setState({ projectid: someArg, redirect: 1 });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.projectid !== this.state.projectid) {\n      this.props.handleToUpdate(this.state.projectid, this.state.redirect);\n    }\n  }\n\n  componentDidMount() {\n    this.setState({ projectlist: this.props.projectlist });\n    console.log(this.state.projectlist);\n  }\n  render() {\n    const classes = useStyles();\n    let ListElement;\n    if (this.state.value === 0) {\n      let projectson = this.state.projectlist.ongoing.concat(\n        this.state.projectlist.completed\n      );\n\n      let listItems1 = projectson.map((projectson) => (\n        <Listelemproj\n          project={projectson}\n          handleToUpdate={this.handleToUpdate}\n        />\n      ));\n\n      ListElement = <List className={classes.list}>{listItems1}</List>;\n    }\n    if (this.state.value === 1) {\n      let projectson = this.state.projectlist.ongoing;\n      let listItems1 = projectson.map((projectson) => (\n        <Listelemproj\n          project={projectson}\n          handleToUpdate={this.handleToUpdate}\n        />\n      ));\n      ListElement = <List className={classes.list}>{listItems1}</List>;\n    }\n    if (this.state.value === 2) {\n      // console.log(projectscom);\n      let projectscom = this.state.projectlist.completed;\n      let listItems2 = projectscom.map((projectscom) => (\n        <Listelemproj\n          project={projectscom}\n          handleToUpdate={this.handleToUpdate}\n        />\n      ));\n      ListElement = <List className={classes.list}>{listItems2}</List>;\n    }\n\n    return (\n      <Grid container justify=\"center\" xs={12}>\n        {\" \"}\n        <Paper className={classes.root}>\n          <Tabs\n            value={this.state.value}\n            onChange={(event, value) => this.setState({ value: value })}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            centered\n            variant=\"fullWidth\"\n          >\n            <Tab label=\"All Projects\" />\n            <Tab label=\"Ongoing Projects\" />\n            <Tab label=\"Completed Projects\" />\n          </Tabs>\n          {ListElement}\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(ProjectList);\n// export default ProjectList;\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FileCopy from \"@material-ui/icons/FileCopy\";\n// import Paper from \"@material-ui/core/Paper\";\nimport { Typography, CssBaseline } from \"@material-ui/core\";\n\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\nclass Listfileproj extends React.Component {\n  render() {\n    const { classes } = this.props;\n    let filelist = this.props.files.map((files) => (\n      <ListItem button onClick={() => this.props.handleToUpdate(files.fileid)}>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <FileCopy />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={files.filename}\n          secondary={`Last updated: ` + files.lastupdated}\n        ></ListItemText>\n        {/* <Card project={this.props.project}></Card> */}\n      </ListItem>\n    ));\n    console.log(this.props.files);\n    return (\n      <>\n        <CssBaseline />\n        <Typography variant=\"h5\">Your Project Files</Typography>\n        {filelist}\n      </>\n    );\n    // return filelist;\n  }\n}\n\nexport default withStyles(useStyles)(Listfileproj);\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FileCopy from \"@material-ui/icons/FileCopy\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ListItemSecondaryAction, Checkbox, Button } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    padding: theme.spacing(2),\n  },\n  root: {\n    display: \"flex\",\n  },\n}));\nclass Listdelfile extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      del: [],\n      selected: 0,\n    };\n    // this.managestate = this.managestate.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.state.selected > 1) {\n      this.props.alert.info(\"deleting more than one file\");\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    let list = this.props.file.map((file) => (\n      <>\n        <ListItem button>\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              <FileCopy />\n            </Avatar>\n          </ListItemAvatar>\n          <Grid container direction=\"column\">\n            <Typography variant=\"h6\">{file.filename}</Typography>\n\n            <ListItemText\n              primary={`Last updated: ` + file.lastupdated}\n            ></ListItemText>\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge=\"end\"\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    let okay = this.state.del;\n                    this.setState({ del: okay.concat([file.fileid]) });\n                    this.setState({ selected: this.state.selected + 1 });\n                  } else {\n                    let okay = this.state.del;\n                    const index = okay.indexOf(file.fileid);\n                    if (index > -1) {\n                      okay.splice(index, 1);\n                    }\n                    this.setState({ del: okay });\n                    this.setState({ selected: this.state.selected - 1 });\n                  }\n                  console.log(\"selected:\" + this.state.selected);\n                }}\n              />\n            </ListItemSecondaryAction>\n            {/* <Card project={this.props.project}></Card> */}\n          </Grid>\n        </ListItem>\n      </>\n    ));\n    let button = (\n      <Grid container justify=\"center\">\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) =>\n            this.props.handleToUpdate(this.state.del, this.state.selected)\n          }\n        >\n          Delete File/Files\n        </Button>\n      </Grid>\n    );\n    return [button, list];\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(Listdelfile));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Listdelfile from \"../assets/listdelfile\";\nimport { Paper } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  button: {\n    padding: theme.spacing(2),\n  },\n}));\n\nclass DeleteProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      fileid: [],\n      selected: 0,\n      deleteflag: 0,\n      files: [\n        { fileid: 1, filename: \"Okay 1\", lastupdated: \"12-35-3566\" },\n        {\n          fileid: 2,\n          filename: \"Okay 2\",\n          lastupdated: \"12-35-3566\",\n        },\n        {\n          fileid: 3,\n          filename: \"Okay 3\",\n          lastupdated: \"12-35-3566\",\n        },\n      ],\n      username: \"\",\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    // this.handleClick = this.handleClick.bind(this);\n  }\n  handleUpdate(fileid, number) {\n    this.setState({ fileid: fileid, selected: number, deleteflag: 1 });\n  }\n  componentDidUpdate() {\n    if (this.state.deleteflag === 1) {\n      this.setState({ deleteflag: 0 });\n      this.props.alert.success(\"sucessfully deleted\");\n      this.props.handleToUpdate();\n      //call delete here\n    }\n  }\n  componentWillMount() {\n    this.setState({ username: this.props.username });\n    //fetch filelist here\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      // <Grid container item xs={12} justify=\"center\" direction=\"column\">\n      <Paper className={classes.root}>\n        <Listdelfile\n          file={this.state.files}\n          handleToUpdate={this.handleUpdate}\n        />\n      </Paper>\n      // </Grid>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(DeleteProject));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, TextField, Paper, Button } from \"@material-ui/core\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { editProject, deleteMember, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\n\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  root: {\n    width: \"80%\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"36%\",\n  },\n}));\n\nclass EditProject extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      projectid: this.props.projectid,\n      name: this.props.name,\n      date: this.props.date,\n      path: this.props.path,\n      username: this.props.username,\n      shortdescription: this.props.shortdescription,\n      description: this.props.description,\n      files: this.props.files,\n      members: this.props.members,\n      memberstring: \"\",\n      deletemember: \"\",\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentWillMount() {\n    this.setState({\n      projectid: this.props.projectid,\n      name: this.props.name,\n      date: this.props.date,\n      path: this.props.path,\n      username: this.props.username,\n      shortdescription: this.props.shortdescription,\n      description: this.props.description,\n      members: this.props.members,\n      memberstring: \"\",\n    });\n  }\n  handleClick(event) {\n    event.preventDefault();\n    console.log(\"Clicker\");\n    console.log(this.state.members);\n    let message = [\n      {\n        username: \"\",\n        role: \"\",\n      },\n    ];\n    try {\n      if (this.state.memberstring !== \"\") {\n        message = JSON.parse(this.state.memberstring);\n      }\n      console.log(message);\n    } catch (e) {\n      this.props.alert.error(e.message);\n    }\n    console.log(message);\n    const operation = {\n      query: editProject,\n      variables: {\n        ld: this.state.description,\n        name: this.state.name,\n        path: this.state.path,\n        sd: this.state.shortdescription,\n        username: this.state.username,\n        members: message,\n        projectid: this.state.projectid,\n      }, //optional\n    };\n    const operationdel = {\n      query: deleteMember,\n      variables: {\n        username: this.state.username,\n        projectid: this.state.projectid,\n        member: this.state.deletemember,\n      },\n    };\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.editProject.status === false) {\n          this.props.alert.error(data.data.editProject.msg);\n        }\n        if (data.data.editProject.status === true) {\n          this.props.alert.success(\"Success on Editing project\");\n          // this.props.handleToUpdate();\n        }\n      })\n      .catch((error) => this.props.alert.error(error.message));\n\n    makePromise(execute(link, operationdel))\n      .then((data) => {\n        if (data.data.deleteMember.status === false) {\n          this.props.alert.error(\n            \"Failed Delete Member\" + data.data.deleteMember.msg\n          );\n        }\n        if (data.data.deleteMember.status === true) {\n          this.props.alert.success(\"Success on deleting\");\n        }\n      })\n      .catch((error) => this.props.alert.error(error.message));\n  }\n  render() {\n    const { classes } = this.props;\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return (\n      <>\n        <Paper className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"Name\"\n                name=\"Name\"\n                label=\"Project name\"\n                value={this.state.name}\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ name: event.target.value })\n                }\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"description1\"\n                name=\"description1\"\n                label=\"Short Description 1\"\n                value={this.state.shortdescription}\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ shortdescription: event.target.value })\n                }\n                //   autoComplete=\"billing address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                multiline\n                id=\"description2\"\n                name=\"description2\"\n                label=\"Description\"\n                value={this.state.description}\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ description: event.target.value })\n                }\n                //   autoComplete=\"billing address-line2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"path\"\n                name=\"path\"\n                label=\"path\"\n                fullWidth\n                value={this.state.path}\n                onChange={(event) =>\n                  this.setState({ path: event.target.value })\n                }\n                //   autoComplete=\"billing address-level2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                label=\"Date\"\n                value={this.state.date}\n                defaultValue={today}\n                fullWidth\n                inputProps={{ readOnly: true }}\n                onChange={(event) =>\n                  this.setState({ date: event.target.value })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label='Add/Edit Member : format [{\"username\":\"ksp\",\"role\":\"leader\"},{}]'\n                fullWidth\n                value={this.state.memberstring}\n                onChange={(event) => {\n                  this.setState({\n                    memberstring: event.target.value,\n                  });\n                }}\n                //\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"delete Member : add one username\"\n                fullWidth\n                value={this.state.deletemember}\n                onChange={(event) => {\n                  this.setState({\n                    deletemember: event.target.value,\n                  });\n                }}\n                //\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"this shows previous member list\"\n                fullWidth\n                value={JSON.stringify(this.state.members)}\n                //\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) => this.handleClick(event)}\n        >\n          Edit Project\n        </Button>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.props.handleToUpdate}\n        >\n          Back\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(EditProject));\n","import React from \"react\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteRounded from \"@material-ui/icons/DeleteRounded\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Listfileproj from \"../assets/listfileproj\";\nimport { Typography, Paper, CssBaseline, Grid } from \"@material-ui/core\";\nimport { ListItem, List, Button } from \"@material-ui/core/\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport { DropzoneDialog } from \"material-ui-dropzone\";\nimport DeleteFile from \"./DeleteFile\";\nimport EditProject from \"./EditProject\";\n// import Typography from '@material-ui/core/Typography';\n\nconst useStyles = createStyles((theme) => ({\n  divforbutton: {\n    flexDirection: \"row\",\n    padding: theme.spacing(1),\n  },\n  buttonclass: {\n    margin: theme.spacing(3),\n  },\n  grid: {\n    flexDirection: \"row\",\n    flexGrow: 1,\n  },\n  root: {\n    display: \"flex\",\n    flexDirection: \"row\",\n  },\n  paper: {\n    padding: theme.spacing(2),\n    width: \"90%\",\n  },\n  listroot: {\n    width: \"100%\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\n\nclass ProjectFileManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      files: [],\n      projectid: 42069,\n      fileid: 42069,\n      viewname: \"allfiles\",\n      filestoupload: [],\n      open: false,\n      username: this.props.username,\n    };\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n    this.handlePage = this.handlePage.bind(this);\n  }\n  componentWillMount() {\n    this.setState({ files: this.props.files, projectid: this.props.projectid });\n    // this.setState({ states: this.props.stateforedit });\n\n    // console.log(this.props.files);\n  }\n  handleToUpdate(someArg) {\n    this.setState({ fileid: someArg });\n  }\n  handlePage() {\n    this.props.handleToUpdate();\n    this.setState({ viewname: \"allfiles\" });\n  }\n\n  componentDidUpdate() {\n    if (this.setState.viewname === \"back\") {\n      this.props.handleToUpdate();\n    }\n    // console.log(this.state.states);\n  }\n  handleClose() {\n    this.setState({\n      open: false,\n    });\n  }\n\n  handleSave(files) {\n    //Saving files to state for further use and closing Modal.\n    this.setState({\n      filestoupload: files,\n      open: false,\n    });\n    // Upload files to server here\n  }\n\n  handleOpen() {\n    this.setState({\n      open: true,\n    });\n  }\n\n  render() {\n    const { classes } = this.props;\n    let top, mid;\n    top = (\n      <Grid container justify=\"center\" direction=\"row\">\n        {/* <Typography variant=\"h4\">Manage Files</Typography> */}\n        <Fab\n          color=\"primary\"\n          aria-label=\"add\"\n          className={classes.buttonclass}\n          onClick={(event) =>\n            this.setState({ viewname: \"addfile\", open: true })\n          }\n        >\n          <AddIcon />\n        </Fab>\n        <Fab\n          color=\"secondary\"\n          aria-label=\"delete\"\n          className={classes.buttonclass}\n          onClick={(event) => this.setState({ viewname: \"deletefile\" })}\n        >\n          <DeleteRounded />\n        </Fab>\n        <Button\n          variant=\"contained\"\n          color=\"primary\"\n          aria-label=\"edit\"\n          className={classes.buttonclass}\n          onClick={(event) => this.setState({ viewname: \"editproject\" })}\n        >\n          Edit\n        </Button>\n        <DropzoneDialog\n          open={this.state.open}\n          onSave={this.handleSave.bind(this)}\n          // acceptedFiles={[\"image/jpeg\", \"image/png\", \"image/bmp\"]}\n          showPreviews={true}\n          maxFileSize={5000000}\n          onClose={this.handleClose.bind(this)}\n        />\n      </Grid>\n    );\n\n    if (\n      this.state.viewname === \"allfiles\" ||\n      this.state.viewname === \"addfile\"\n    ) {\n      mid = (\n        <>\n          <CssBaseline />\n          <Grid container justify=\"center\" direction=\"row\" spacing={2}>\n            <Grid\n              item\n              direction=\"row\"\n              justify=\"center\"\n              className={classes.root}\n              xs={12}\n              sm={6}\n            >\n              <Paper className={classes.paper}>\n                <Typography variant=\"h4\">Your Project Details</Typography>\n                <Typography variant=\"subtitle1\">\n                  {`Date created:` + this.props.date}\n                </Typography>\n                <Typography variant=\"subtitle1\">\n                  {\" \"}\n                  {`Description:` + this.props.description}{\" \"}\n                </Typography>\n                <Typography variant=\"subtitle1\">Project Members:</Typography>\n                <List className={classes.listroot}>\n                  {\n                    <>\n                      {this.props.members.map((members) => (\n                        <ListItem button>\n                          <ListItemAvatar>\n                            <Avatar className={classes.avatar}>\n                              <PeopleIcon></PeopleIcon>\n                            </Avatar>\n                          </ListItemAvatar>\n                          <ListItemText\n                            primary={members.user.username}\n                            secondary={members.role}\n                          />\n                        </ListItem>\n                      ))}\n                    </>\n                  }\n                </List>\n              </Paper>\n            </Grid>\n            <Grid\n              item\n              direction=\"row\"\n              justify=\"center\"\n              className={classes.root}\n              xs={12}\n              sm={6}\n            >\n              <Paper className={classes.paper}>\n                <Listfileproj\n                  files={this.state.files}\n                  handleToUpdate={this.handleToUpdate}\n                  description={this.state.description}\n                />\n              </Paper>\n            </Grid>\n          </Grid>\n        </>\n      );\n    }\n\n    if (this.state.viewname === \"deletefile\") {\n      mid = <DeleteFile handleToUpdate={this.handlePage} />;\n    }\n    if (this.state.viewname === \"editproject\") {\n      mid = (\n        <EditProject\n          projectid={this.state.projectid}\n          name={this.props.name}\n          date={this.props.date}\n          path={this.props.path}\n          username={this.props.username}\n          shortdescription={this.props.shortdescription}\n          description={this.props.description}\n          members={this.props.members}\n          handleToUpdate={this.handlePage}\n        />\n      );\n    }\n\n    return [top, mid];\n  }\n}\n\nexport default withStyles(useStyles)(ProjectFileManager);\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\nclass Listelemtask extends React.Component {\n  componentDidMount() {\n    console.log(this.props);\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <ListItem\n        button\n        onClick={() => this.props.handleToUpdate(this.props.task.taskid)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Grid container direction=\"column\">\n          <Typography variant=\"h6\">{this.props.task.title}</Typography>\n\n          <ListItemText\n            primary={this.props.task.description}\n            secondary={\n              `Started: ` +\n              this.props.task.starttime +\n              ` Assignmed By: ` +\n              this.props.task.assignedby\n            }\n          ></ListItemText>\n          {/* <Card project={this.props.task}></Card> */}\n        </Grid>\n      </ListItem>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(Listelemtask);\n","import React from \"react\";\nimport { withStyles, Paper, Grid } from \"@material-ui/core\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport Tabs from \"@material-ui/core/Tabs\";\nimport Tab from \"@material-ui/core/Tab\";\nimport List from \"@material-ui/core/List\";\nimport Listelemtask from \"../assets/listelemtask\";\nconst useStyles = createStyles((theme) => ({\n  root: {\n    // display: \"flex\",\n    width: \"90%\",\n  },\n  list: {\n    width: \"100%\",\n    maxWidth: 360,\n  },\n}));\n\nclass TaskList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      value: 0,\n      tasklist: this.props.tasklist,\n      taskid: 42069,\n      redirect: 0,\n    };\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n  }\n\n  handleToUpdate(someArg) {\n    this.setState({ taskid: someArg, redirect: 1 });\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.taskid !== this.state.taskid) {\n      this.props.handleToUpdate(this.state.taskid, this.state.redirect);\n    }\n    // console.log(this.state.tasklist);\n  }\n  render() {\n    const classes = useStyles();\n    let ListElement;\n    if (this.state.value === 0) {\n      let taskall = this.state.tasklist.all;\n      let listItems1 = taskall.map((taskall) => (\n        <Listelemtask task={taskall} handleToUpdate={this.handleToUpdate} />\n      ));\n\n      ListElement = <List className={classes.list}>{listItems1}</List>;\n    }\n    if (this.state.value === 1) {\n      let projectson = this.state.tasklist.active;\n      let listItems1 = projectson.map((projectson) => (\n        <Listelemtask task={projectson} handleToUpdate={this.handleToUpdate} />\n      ));\n      ListElement = <List className={classes.list}>{listItems1}</List>;\n    }\n    if (this.state.value === 2) {\n      let projectscom = this.state.tasklist.inactive;\n      let listItems2 = projectscom.map((projectscom) => (\n        <Listelemtask task={projectscom} handleToUpdate={this.handleToUpdate} />\n      ));\n      ListElement = <List className={classes.list}>{listItems2}</List>;\n    }\n    if (this.state.value === 3) {\n      let projectson = this.state.tasklist.working;\n      let listItems1 = projectson.map((projectson) => (\n        <Listelemtask task={projectson} handleToUpdate={this.handleToUpdate} />\n      ));\n      ListElement = <List className={classes.list}>{listItems1}</List>;\n    }\n    if (this.state.value === 4) {\n      let projectscom = this.state.tasklist.completed;\n      let listItems2 = projectscom.map((projectscom) => (\n        <Listelemtask task={projectscom} handleToUpdate={this.handleToUpdate} />\n      ));\n      ListElement = <List className={classes.list}>{listItems2}</List>;\n    }\n\n    return (\n      <Grid\n        container\n        item\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n      >\n        <Paper>\n          <Tabs\n            value={this.state.value}\n            onChange={(event, value) => this.setState({ value: value })}\n            indicatorColor=\"primary\"\n            textColor=\"primary\"\n            variant=\"scrollable\"\n            scrollButtons=\"on\"\n          >\n            <Tab label=\"All Tasks\" />\n            <Tab label=\"Active Tasks\" />\n            <Tab label=\"Inactive Tasks\" />\n            <Tab label=\"Working Tasks\" />\n            <Tab label=\"Completed Tasks\" />\n          </Tabs>\n          {ListElement}\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default withStyles(useStyles)(TaskList);\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, TextField, Paper, Button, MenuItem } from \"@material-ui/core\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { updateTask, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  root: {\n    width: \"80%\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"36%\",\n  },\n}));\n\nclass EditTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.username,\n      projectid: this.props.projectid,\n      taskid: this.props.taskid,\n      title: this.props.title,\n      description: this.props.description,\n      starttime: this.props.starttime,\n      endtime: this.props.endtime,\n      status_type: this.props.status_type,\n      completiontime: this.props.completiontime,\n      priority_type: this.props.priority_type,\n      assignedby: this.props.assignedby,\n      assignedto: this.props.assignedto,\n      preqtaskid: this.props.preqtaskid,\n      viewname: \"taskdetails\", // edit task\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({ username: this.props.username });\n    }\n    this.setState(this.props.states);\n    this.setState({ assignedto: [] });\n    console.log(this.props.assignedto);\n  }\n  async handleClick(event) {\n    // event.preventDefault();\n    // console.log(this.state.assignedto);\n    // console.log(\"Clicker\");\n    //if success redirect back\n    const operation = {\n      query: updateTask,\n      variables: {\n        assignedto: this.state.assignedto,\n        description: this.state.description,\n        enddate: this.state.enddate,\n        priority: this.state.priority_type,\n        taskid: this.state.taskid,\n        title: this.state.title,\n        username: this.state.username,\n      }, //optional\n    };\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.addTask.status === false) {\n          this.props.alert.error(data.data.addTask.msg);\n        }\n        if (data.data.addTask.status === true) {\n          this.props.alert.success(\"Success on editing Task\");\n          this.props.handleToUpdate();\n          // this.props.handleToUpdate();\n        }\n      })\n      .catch((error) => {\n        this.props.alert.error(error.message);\n        console.log(error);\n      });\n  }\n  render() {\n    const { classes } = this.props;\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n    const priority_type = [\n      { value: \"highest\", label: \"highest\" },\n      { value: \"high\", label: \"high\" },\n      { value: \"normal\", label: \"normal\" },\n      { value: \"low\", label: \"low\" },\n    ];\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n\n    return (\n      <>\n        <Paper className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"Task title\"\n                fullWidth\n                value={this.state.title}\n                onChange={(event) =>\n                  this.setState({ title: event.target.value })\n                }\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                multiline\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                fullWidth\n                value={this.state.description}\n                onChange={(event) =>\n                  this.setState({ description: event.target.value })\n                }\n                //   autoComplete=\"billing address-line2\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                select\n                id=\"priority_type\"\n                name=\"priority_type\"\n                label=\"priority_type\"\n                helperText=\"priority type\"\n                value={this.state.priority_type}\n                onChange={(event) =>\n                  this.setState({ priority_type: event.target.value })\n                }\n                fullWidth\n                //   autoComplete=\"billing address-level2\"\n              >\n                {priority_type.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                label=\"StartDate\"\n                defaultValue={today}\n                fullWidth\n                inputProps={{ readOnly: true }}\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                helperText=\"EndDate:Change Only if you want to edit\"\n                // defaultValue={this.state.endtime}\n                fullWidth\n                onChange={(event) =>\n                  this.setState({\n                    enddate: event.target.value + \"T07:45:05.567947\",\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"Assigned To : Enter username seperated by a comma\"\n                fullWidth\n                defaultValue={JSON.stringify(this.state.assignedto)}\n                value={this.state.assignedto}\n                onChange={(event) => {\n                  this.setState({\n                    assignedto: event.target.value.split(\",\"),\n                  });\n                }}\n                //\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) => this.handleClick(event)}\n        >\n          Edit Task\n        </Button>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.props.handleToUpdate}\n        >\n          Back\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(EditTask));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport {\n  Button,\n  Typography,\n  ListItem,\n  ListItemAvatar,\n  Avatar,\n  List,\n  ListItemText,\n  Grid,\n  Paper,\n} from \"@material-ui/core\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport EditTask from \"./EditTask\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { getTask, preqTask, completeTask, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nimport WorkIcon from \"@material-ui/icons/Work\";\n\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    width: \"90%\",\n  },\n}));\n\nclass TaskView extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.username,\n      projectid: this.props.projectid,\n      taskid: this.props.taskid,\n      title: \"\",\n      description: \"\",\n      starttime: \"\",\n      endtime: \"\",\n      status_type: \"\",\n      completiontime: \"\",\n      priority_type: \"\",\n      assignedby: \"\",\n      assignedto: [],\n      viewname: \"taskdetails\",\n      preqtask: [],\n      preqtasklist: [],\n      loaded: 1, // edit task\n    };\n    this.pageUpdate = this.pageUpdate.bind(this);\n    this.fetchData = this.fetchData.bind(this);\n    this.completetask = this.completetask.bind(this);\n  }\n\n  completetask() {\n    const operation4 = {\n      query: completeTask,\n      variables: {\n        taskid: this.props.taskid,\n        username: this.props.username,\n      },\n    };\n    makePromise(execute(link, operation4))\n      .then((data) => {\n        if (data.data.completeTask.status === true) {\n          this.props.alert.success(\"Task Completed\");\n\n          // this.setState({ authenticated: true });\n        } else {\n          this.props.alert.error(data.data.completeTask.msg);\n        }\n      })\n      .catch((error) => console.log(error));\n    // await this.fetchData();\n  }\n\n  async fetchData() {\n    const operation1 = {\n      query: getTask,\n      variables: {\n        taskid: this.props.taskid,\n      }, //optional\n    };\n    await makePromise(execute(link, operation1))\n      .then(async (data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        let task = data.data.getTask;\n        let preqtask = task.preqtask;\n        let preqtasklist = [];\n        let x;\n        let operation2;\n        if (preqtask[0] !== null) {\n          for (x of preqtask) {\n            console.log(x);\n            operation2 = {\n              query: preqTask,\n              variables: {\n                taskid: x,\n              }, //optional\n            };\n            await makePromise(execute(link, operation2)).then((data) => {\n              preqtasklist.push(data.data.getTask);\n            });\n          }\n        }\n        console.log(preqtasklist);\n        this.setState({\n          title: task.title,\n          description: task.description,\n          starttime: task.starttime,\n          endtime: task.endtime,\n          completiontime: task.completiontime,\n          status_type: task.status,\n          priority_type: task.priority,\n          assignedby: task.assignedby,\n          assignedto: task.assignedto,\n          preqtask: task.preqtask,\n          preqtasklist: preqtasklist,\n          loaded: 1,\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n  async pageUpdate() {\n    await this.fetchData();\n    this.setState({ viewname: \"taskdetails\" });\n  }\n\n  componentDidMount() {\n    this.fetchData();\n  }\n  render() {\n    const { classes } = this.props;\n    let low, mid;\n    low = (\n      <Grid container justify=\"center\" direction=\"row\">\n        {/* <Typography variant=\"h4\">Manage Files</Typography> */}\n        <Button\n          color=\"primary\"\n          aria-label=\"edit\"\n          className={classes.buttonclass}\n          onClick={(event) => this.setState({ viewname: \"edittask\" })}\n        >\n          Edit Task\n        </Button>\n        <Button\n          color=\"primary\"\n          aria-label=\"edit\"\n          className={classes.buttonclass}\n          onClick={this.completetask}\n        >\n          Complete Task\n        </Button>\n      </Grid>\n    );\n    let preqtasklist = this.state.preqtasklist;\n    mid = (\n      <Paper className={classes.paper}>\n        <Typography variant=\"h4\">{this.state.title}</Typography>\n        <Typography variant=\"h6\">\n          {`Status type :` +\n            this.state.status_type +\n            ` Priorty type :` +\n            this.state.priority_type}\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {`start date:` + this.state.starttime}\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {`end date:` + this.state.endtime}\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {`completion date:` + this.state.completiontime}\n        </Typography>\n        <Typography variant=\"subtitle1\">\n          {\" \"}\n          {`Description:` + this.state.description}{\" \"}\n        </Typography>\n        <Typography variant=\"subtitle1\">Assigned By:</Typography>\n        <ListItem button>\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              <PeopleIcon></PeopleIcon>\n            </Avatar>\n          </ListItemAvatar>\n          <ListItemText primary={this.state.assignedby} />\n        </ListItem>\n        <Typography variant=\"subtitle1\">Members Assigned To:</Typography>\n        <List className={classes.listroot}>\n          {\n            <>\n              {this.state.assignedto.map((assignedto) => (\n                <ListItem button>\n                  <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                      <PeopleIcon></PeopleIcon>\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText primary={assignedto.username} />\n                </ListItem>\n              ))}\n            </>\n          }\n        </List>\n        <Typography variant=\"subtitle1\">Prerequisite Tasks:</Typography>\n        <List className={classes.listroot}>\n          {\n            <>\n              {preqtasklist.map((preqtasklist) => (\n                <ListItem button>\n                  <ListItemAvatar>\n                    <Avatar className={classes.avatar}>\n                      <WorkIcon></WorkIcon>\n                    </Avatar>\n                  </ListItemAvatar>\n                  <ListItemText>\n                    <Typography variant=\"h5\">{preqtasklist.title}</Typography>\n                    <Typography variant=\"h6\">\n                      {preqtasklist.description}\n                    </Typography>\n                    <Typography variant=\"subtitle1\">\n                      {`Status :` +\n                        preqtasklist.status +\n                        ` Priority :` +\n                        preqtasklist.priority}\n                    </Typography>\n                  </ListItemText>\n                </ListItem>\n              ))}\n            </>\n          }\n        </List>\n      </Paper>\n    );\n    if (this.state.viewname === \"edittask\") {\n      mid = (\n        <EditTask\n          username={this.state.username}\n          projectid={this.state.projectid}\n          taskid={this.state.taskid}\n          title={this.state.title}\n          description={this.state.description}\n          starttime={this.state.starttime}\n          endtime={this.state.endtime}\n          status_type={this.state.status_type}\n          priority_type={this.state.priority_type}\n          assignedby={this.state.assignedby}\n          assignedto={this.state.assignedto}\n          preqtaskid={this.state.preqtask}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n      low = null;\n    }\n    return [mid, low];\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(TaskView));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ListItemSecondaryAction, Checkbox, Button } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    padding: theme.spacing(2),\n  },\n}));\nclass Listdeltask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      del: [],\n      selected: 0,\n    };\n    // this.managestate = this.managestate.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.state.selected > 1) {\n      this.props.alert.info(\"deleting more than one task is not advised\");\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    let list = this.props.task.map((task) => (\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Grid container direction=\"column\" justify=\"center\">\n          <Typography variant=\"h6\">{task.title}</Typography>\n\n          <ListItemText\n            primary={task.description}\n            secondary={\n              `Started: ` + task.startdate + ` Assigned By: ` + task.assignedby\n            }\n          ></ListItemText>\n          {/* <Card project={this.props.task}></Card> */}\n          <ListItemSecondaryAction>\n            <Checkbox\n              edge=\"end\"\n              onChange={(event) => {\n                if (event.target.checked) {\n                  let okay = this.state.del;\n                  this.setState({ del: okay.concat([task.taskid]) });\n                  this.setState({ selected: this.state.selected + 1 });\n                } else {\n                  let okay = this.state.del;\n                  const index = okay.indexOf(task.taskid);\n                  if (index > -1) {\n                    okay.splice(index, 1);\n                  }\n                  this.setState({ del: okay });\n                  this.setState({ selected: this.state.selected - 1 });\n                }\n                console.log(\"selected:\" + this.state.selected);\n              }}\n            />\n          </ListItemSecondaryAction>\n          {/* <Card project={this.props.project}></Card> */}\n        </Grid>\n      </ListItem>\n    ));\n    let button = (\n      <Grid container justify=\"center\">\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) =>\n            this.props.handleToUpdate(this.state.del, this.state.selected)\n          }\n        >\n          Delete Task\n        </Button>\n      </Grid>\n    );\n    return [button, list];\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(Listdeltask));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Listdeltask from \"../assets/listdeltask\";\nimport { Grid, Paper } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\nimport { deleteTask, link } from \"../queries\";\nimport { execute, makePromise } from \"apollo-link\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  button: {\n    padding: theme.spacing(2),\n  },\n}));\n\nclass DeleteTask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      taskid: [],\n      selected: 0,\n      deleteflag: 0,\n      tasks: this.props.tasks,\n      username: \"\",\n      projectid: \"\",\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    // this.handleClick = this.handleClick.bind(this);\n  }\n  handleUpdate(projid, number) {\n    let success;\n    this.setState({ taskid: projid, selected: number, deleteflag: 1 });\n    let x;\n    for (x of projid) {\n      const operation = {\n        query: deleteTask,\n        variables: {\n          username: this.state.username,\n          taskid: x,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation)) // eslint-disable-next-line\n        .then((data) => {\n          console.log(data);\n          // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n          if (data.data.deleteTask.status === false) {\n            this.props.alert.error(data.data.deleteTask.msg);\n          }\n          if (data.data.deleteTask.status === true) {\n            // eslint-disable-next-line\n            this.props.alert.success(\"Success on delete\");\n          }\n        })\n        .catch((error) => this.props.alert.error(error));\n    }\n\n    success = true;\n    if (success) this.props.handleToUpdate();\n  }\n  componentDidUpdate() {\n    if (this.state.deleteflag === 1) {\n      this.setState({ deleteflag: 0 });\n      this.props.alert.success(\"sucessfully deleted\");\n      this.props.handleToUpdate();\n\n      //call delete here\n    }\n  }\n  componentWillMount() {\n    this.setState({\n      username: this.props.username,\n      projectid: this.props.projectid,\n    });\n  }\n  render() {\n    const { classes } = this.props;\n    return (\n      <Grid\n        container\n        item\n        xs={12}\n        justify=\"center\"\n        alignItems=\"center\"\n        direction=\"column\"\n      >\n        <Grid\n          container\n          xs={6}\n          justify=\"center\"\n          className={classes.button}\n        ></Grid>\n        <Paper className={classes.root}>\n          <Listdeltask\n            task={this.state.tasks}\n            handleToUpdate={this.handleUpdate}\n          />\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(DeleteTask));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ListItemSecondaryAction, Checkbox } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    padding: theme.spacing(2),\n  },\n}));\nclass Listseltask extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      sel: [],\n      selected: 0,\n    };\n    // this.managestate = this.managestate.bind(this);\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (this.state.selected > 1) {\n      this.props.alert.info(\n        \"select more than one preq task makes project complex\"\n      );\n    }\n    if (prevState.selected !== this.state.selected) {\n      this.props.handleToUpdate(this.state.sel, this.state.selected);\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    let list = this.props.task.map((task) => (\n      <ListItem button>\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <WorkIcon />\n          </Avatar>\n        </ListItemAvatar>\n        <Grid container direction=\"column\" justify=\"center\">\n          <Typography variant=\"h6\">{task.title}</Typography>\n\n          <ListItemText\n            primary={task.description}\n            secondary={\n              `Started: ` + task.startdate + ` Assigned By: ` + task.assignedby\n            }\n          ></ListItemText>\n          {/* <Card project={this.props.task}></Card> */}\n          <ListItemSecondaryAction>\n            <Checkbox\n              edge=\"end\"\n              onChange={(event) => {\n                if (event.target.checked) {\n                  let okay = this.state.sel;\n                  this.setState({ sel: okay.concat([task.taskid]) });\n                  this.setState({ selected: this.state.selected + 1 });\n                } else {\n                  let okay = this.state.sel;\n                  const index = okay.indexOf(task.taskid);\n                  if (index > -1) {\n                    okay.splice(index, 1);\n                  }\n                  this.setState({ sel: okay });\n                  this.setState({ selected: this.state.selected - 1 });\n                }\n                console.log(\"selected:\" + this.state.selected);\n              }}\n            />\n          </ListItemSecondaryAction>\n          {/* <Card project={this.props.project}></Card> */}\n        </Grid>\n      </ListItem>\n    ));\n    return [list];\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(Listseltask));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport {\n  Grid,\n  TextField,\n  Paper,\n  Button,\n  MenuItem,\n  Typography,\n} from \"@material-ui/core\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { ProjectTasks, addTask, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nimport Listseltask from \"../assets/listseltask\";\n\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  root: {\n    width: \"80%\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n  },\n}));\n\nclass AddTask extends React.Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: this.props.username,\n      projectid: this.props.projectid,\n      priority_type: \"\",\n      status_type: \"\",\n      task_title: \"\",\n      startdate: \"2000-11-15\",\n      enddate: \"2000-11-15\",\n      description: \"\",\n      assignedto: [],\n      loaded: \"\",\n      preqid: [],\n      preqammout: 0,\n      taskall: [],\n    };\n    this.handleClick = this.handleClick.bind(this);\n    this.fetchTasksFilter = this.fetchTasksFilter.bind(this);\n    this.handleUpdate = this.handleUpdate.bind(this);\n  }\n\n  async fetchTasksFilter() {\n    const operation1 = {\n      query: ProjectTasks,\n      variables: {\n        username: this.props.username,\n        taskFilter: null,\n        projectid: this.props.projectid,\n        tasklist: [],\n      }, //optional\n    };\n    let tasklist;\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data) {\n          tasklist = data.data.ProjectTasks;\n          console.log(tasklist);\n          // return tasklist;\n\n          this.setState({ taskall: tasklist, loaded: 1 });\n        }\n      })\n      .catch((error) => {\n        this.props.alert.error(error.message);\n        console.log(error);\n      });\n  }\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({ username: this.props.username });\n    }\n    let today = new Date();\n    let dd = String(today.getDate() + 1).padStart(2, \"0\");\n    let mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    let yyyy = today.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    this.setState({ startdate: today + \"T07:45:05.567947\" });\n    this.setState({ enddate: today + \"T07:45:05.567947\" });\n  }\n  async handleClick(event) {\n    console.log(this.state.enddate);\n    // event.preventDefault();\n    const operation = {\n      query: addTask,\n      variables: {\n        assignedby: this.state.username,\n        assignedto: this.state.assignedto,\n        description: this.state.description,\n        enddate: this.state.enddate,\n        preqtaskid: this.state.preqid,\n        priority: this.state.priority_type,\n        projectid: this.state.projectid,\n        title: this.state.task_title,\n      }, //optional\n    };\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.addTask.status === false) {\n          this.props.alert.error(data.data.addTask.msg);\n        }\n        if (data.data.addTask.status === true) {\n          this.props.alert.success(\"Success on adding Task\");\n          this.props.handleToUpdate();\n        }\n      })\n      .catch((error) => {\n        this.props.alert.error(error.message);\n        console.log(error);\n      });\n    //if success redirect back\n    this.props.handleToUpdate();\n  }\n  handleUpdate(sel, select) {\n    this.setState({ preqid: sel, preqammout: select });\n  }\n  componentDidMount() {\n    this.fetchTasksFilter();\n  }\n  render() {\n    const { classes } = this.props;\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    var tomorrow = new Date(today);\n    tomorrow.setDate(tomorrow.getDate() + 1);\n    var dd1 = String(tomorrow.getDate()).padStart(2, \"0\");\n    var mm1 = String(tomorrow.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy1 = tomorrow.getFullYear();\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    tomorrow = yyyy1 + \"-\" + mm1 + \"-\" + dd1;\n    const priority_type = [\n      { value: \"highest\", label: \"highest\" },\n      { value: \"high\", label: \"high\" },\n      { value: \"normal\", label: \"normal\" },\n      { value: \"low\", label: \"low\" },\n    ];\n\n    let listtask;\n    if (this.state.loaded === 1) {\n      listtask = (\n        <Listseltask\n          task={this.state.taskall}\n          handleToUpdate={this.handleUpdate}\n        />\n      );\n    }\n\n    return (\n      <FormControl>\n        <Grid container item xs={12} justify=\"center\">\n          <Paper className={classes.root}>\n            <Grid container spacing={3}>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"title\"\n                  name=\"titile\"\n                  label=\"Task title\"\n                  fullWidth\n                  onChange={(event) =>\n                    this.setState({ task_title: event.target.value })\n                  }\n                  //   autoComplete=\"fname\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  multiline\n                  id=\"description\"\n                  name=\"description\"\n                  label=\"Description\"\n                  fullWidth\n                  onChange={(event) =>\n                    this.setState({ description: event.target.value })\n                  }\n\n                  //   autoComplete=\"billing address-line2\"\n                />\n              </Grid>\n\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  select\n                  id=\"priority_type\"\n                  name=\"priority_type\"\n                  label=\"priority_type\"\n                  helperText=\"priority type\"\n                  value={this.state.priority_type}\n                  onChange={(event) =>\n                    this.setState({ priority_type: event.target.value })\n                  }\n                  fullWidth\n                  //   autoComplete=\"billing address-level2\"\n                >\n                  {priority_type.map((option) => (\n                    <MenuItem key={option.value} value={option.value}>\n                      {option.label}\n                    </MenuItem>\n                  ))}\n                </TextField>\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  type=\"date\"\n                  id=\"date\"\n                  name=\"date\"\n                  label=\"StartDate\"\n                  defaultValue={today}\n                  fullWidth\n                  inputProps={{ readOnly: true }}\n                  onChange={(event) =>\n                    this.setState({\n                      startdate: event.target.value + \"T07:45:05.567947\",\n                    })\n                  }\n                />\n              </Grid>\n              <Grid item xs={12} sm={6}>\n                <TextField\n                  type=\"date\"\n                  id=\"date\"\n                  name=\"date\"\n                  label=\"EndDate\"\n                  defaultValue={tomorrow}\n                  fullWidth\n                  onChange={(event) => {\n                    console.log(event.target.value + \"T07:45:05.567947\");\n                    this.setState({\n                      enddate: event.target.value + \"T07:45:05.567947\",\n                    });\n                  }}\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <TextField\n                  required\n                  id=\"assigned to\"\n                  name=\"assigned to\"\n                  label=\"Assigned To : Enter username seperated by a comma\"\n                  fullWidth\n                  onChange={(event) => {\n                    this.setState({\n                      assignedto: event.target.value.split(\",\"),\n                    });\n                    //   console.log(event.target.value.split(\",\"));\n                  }}\n                  //   autoComplete=\"fname\"\n                />\n              </Grid>\n              <Grid item xs={12}>\n                <Typography variant=\"h6\">Select Prerequisite task</Typography>\n                {listtask}\n              </Grid>\n            </Grid>\n          </Paper>\n          <Grid container xs={6} justify=\"center\" spacing={3}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={(event) => this.handleClick(event)}\n            >\n              Add Task\n            </Button>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={this.props.handleToUpdate}\n            >\n              Back\n            </Button>\n          </Grid>\n        </Grid>\n      </FormControl>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(AddTask));\n","import React from \"react\";\nimport { Fab, Grid, Typography } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport backgrondimage from \"../img/background.jpg\";\nimport clsx from \"clsx\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteRounded from \"@material-ui/icons/DeleteRounded\";\nimport TaskList from \"./TasksList\";\nimport TaskView from \"./TaskView\";\nimport DeleteTask from \"./DeleteTask\";\nimport AddTask from \"./AddTask\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { ProjectTasks, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  divforbutton: {\n    flexDirection: \"row\",\n    padding: theme.spacing(3),\n  },\n  buttonclass: {\n    margin: theme.spacing(3),\n  },\n  headinger: {\n    padding: theme.spacing(1),\n    // background: \"#FFFFFF\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass TaskManagerProj extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.username,\n      projectid: this.props.projectid,\n      tasks: [],\n      viewname: \"alltasklist\", // add task delete task view task ( edit task )\n      taskid: 42069,\n      redirect: 0,\n      all: [],\n      active: [],\n      inactive: [],\n      working: [],\n      completed: [],\n    };\n    this.pageUpdate = this.pageUpdate.bind(this);\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n    this.fetchTasksFilter = this.fetchTasksFilter.bind(this);\n    this.fetchalldata = this.fetchalldata.bind(this);\n  }\n  async pageUpdate() {\n    await this.fetchalldata();\n    this.setState({ viewname: \"alltasklist\" });\n  }\n  handleToUpdate(taskid) {\n    this.setState({ taskid: taskid, viewname: \"viewtask\" });\n  }\n  async fetchTasksFilter(Filter) {\n    const operation1 = {\n      query: ProjectTasks,\n      variables: {\n        username: this.state.username,\n        taskFilter: Filter,\n        projectid: this.state.projectid,\n      }, //optional\n    };\n    let tasklist;\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data) {\n          tasklist = data.data.ProjectTasks;\n          console.log(tasklist);\n          // return tasklist;\n          if (Filter === null) {\n            this.setState({ all: tasklist });\n          }\n          if (Filter === \"inactive\") {\n            this.setState({ inactive: tasklist });\n          }\n          if (Filter === \"active\") {\n            this.setState({ active: tasklist });\n          }\n          if (Filter === \"completed\") {\n            this.setState({ completed: tasklist });\n          }\n          if (Filter === \"working\") {\n            this.setState({ working: tasklist });\n          }\n        }\n      })\n      .catch((error) => {\n        this.props.alert.error(error.message);\n        console.log(error);\n      });\n  }\n  async fetchalldata() {\n    await this.fetchTasksFilter(null);\n    await this.fetchTasksFilter(\"completed\");\n    await this.fetchTasksFilter(\"working\");\n    await this.fetchTasksFilter(\"inactive\");\n    await this.fetchTasksFilter(\"active\");\n    let tasklist = {\n      inactive: this.state.inactive,\n      working: this.state.working,\n      active: this.state.active,\n      completed: this.state.completed,\n      all: this.state.all,\n    };\n    this.setState({ tasks: tasklist, loaded: 1 });\n    console.log(tasklist);\n    console.log(this.state.tasks);\n  }\n\n  async componentWillMount() {\n    if (\n      this.props.username !== undefined &&\n      this.props.projectid !== undefined\n    ) {\n      this.setState({\n        username: this.props.username,\n        projectid: this.props.projectid,\n      });\n    }\n    await this.fetchalldata();\n    // fetch all tasks here\n  }\n  componentDidUpdate() {\n    //fetch all tasks here again\n  }\n  render() {\n    const { classes } = this.props;\n    let mid;\n    if (this.state.loaded === 1) {\n      console.log(this.state.tasks);\n      mid = (\n        <TaskList\n          tasklist={this.state.tasks}\n          handleToUpdate={this.handleToUpdate}\n        />\n      );\n    }\n\n    const fixedHeightPaper1 = clsx(\n      classes.paper,\n      classes.fixedHeight,\n      classes.background\n    );\n    let top = (\n      <Grid container spacing={3}>\n        <Grid container justify=\"center\" direction=\"row\">\n          {/* <Typography variant=\"h4\">Manage Files</Typography> */}\n          <Fab\n            color=\"primary\"\n            aria-label=\"add\"\n            className={classes.buttonclass}\n            onClick={(event) => this.setState({ viewname: \"addtask\" })}\n          >\n            <AddIcon />\n          </Fab>\n          <Fab\n            color=\"secondary\"\n            aria-label=\"delete\"\n            className={classes.buttonclass}\n            onClick={(event) => this.setState({ viewname: \"deletetask\" })}\n          >\n            <DeleteRounded />\n          </Fab>\n        </Grid>\n      </Grid>\n    );\n\n    if (this.state.viewname === \"viewtask\") {\n      mid = (\n        <TaskView\n          username={this.state.username}\n          projectid={this.state.projectid}\n          taskid={this.state.taskid}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n    }\n    if (this.state.viewname === \"deletetask\") {\n      mid = (\n        <DeleteTask\n          username={this.state.username}\n          projectid={this.state.projectid}\n          tasks={this.state.tasks.all}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n    }\n    if (this.state.viewname === \"addtask\") {\n      mid = (\n        <AddTask\n          username={this.state.username}\n          projectid={this.state.projectid}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n    }\n    return (\n      <Grid item xs={12} justify=\"center\">\n        <Paper className={fixedHeightPaper1} justify=\"center\">\n          <Typography variant=\"h3\" component=\"h3\">\n            Task List\n          </Typography>\n          {top}\n          {mid}\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(TaskManagerProj));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport { Typography, CssBaseline } from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport Button from \"@material-ui/core/Button\";\n\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  root: {\n    width: \"100%\",\n  },\n}));\nclass Listnotes extends React.Component {\n  render() {\n    const { classes } = this.props;\n    let notes = this.props.notes.map((notes) => (\n      <ListItem button>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              Your Note\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {notes.title}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Description\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {notes.description}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Button size=\"small\">Focus</Button>\n          </CardActions>\n        </Card>\n      </ListItem>\n    ));\n    // console.log(this.props.files);\n    return (\n      <>\n        <CssBaseline />\n\n        {notes}\n      </>\n    );\n    // return filelist;\n  }\n}\n\nexport default withStyles(useStyles)(Listnotes);\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, TextField, MenuItem, Button } from \"@material-ui/core\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { addNote, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  root: {\n    width: \"80%\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    // width: \"36%\",\n  },\n}));\n\nclass AddNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: this.props.username,\n      title: \"\",\n      description: \"\",\n      color: \"\",\n      fetchmethod: \"\",\n      projectid: this.props.projectid,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n\n  componentWillMount() {\n    if (this.props.fetchmethod) {\n      this.setState({ fetchmethod: this.props.fetchmethod });\n    }\n  }\n  handleClick() {\n    //call mutation here\n    console.log(\"do this\");\n    if (this.state.fetchmethod === \"user\") {\n      console.log(\"didthis\");\n      const operation = {\n        query: addNote,\n        variables: {\n          title: this.state.title,\n          color: this.state.color,\n          description: this.state.description,\n          username: this.state.username,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation))\n        .then((data) => {\n          // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n          console.log(data);\n          if (data.data.addNote.status === false) {\n            this.props.alert.error(data.data.addNote.msg);\n          }\n          if (data.data.addNote.status === true) {\n            this.props.alert.success(\"Success on adding note\");\n            this.props.handleToUpdate();\n          }\n        })\n        .catch((error) => this.props.alert.error(error));\n    }\n    if (this.state.fetchmethod === \"project\") {\n      // eslint-disable-next-line\n      {\n        console.log(this.state.projectid);\n        console.log(\"didthis2\");\n        const operation = {\n          query: addNote,\n          variables: {\n            title: this.state.title,\n            color: this.state.color,\n            description: this.state.description,\n            username: this.state.username,\n            projectid: this.state.projectid,\n          }, //optional\n        };\n\n        makePromise(execute(link, operation))\n          .then((data) => {\n            // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n            if (data.data.addNote.status === false) {\n              this.props.alert.error(data.data.addNote.msg);\n            }\n            if (data.data.addNote.status === true) {\n              this.props.alert.success(\"Success on adding note\");\n              this.props.handleToUpdate();\n              console.log(this.state.projectid);\n            }\n          })\n          .catch((error) => this.props.alert.error(error));\n      }\n    }\n    //on sucess redirect\n\n    // Different Mutation Called Based on fetch method\n  }\n  render() {\n    const { classes } = this.props;\n    const color = [\n      { value: \"red\", label: \"red\" },\n      { value: \"green\", label: \"green\" },\n      { value: \"blue\", label: \"blue\" },\n    ];\n    let body = (\n      <Grid container item xs={12} justify=\"center\">\n        <Paper className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"Note title\"\n                fullWidth\n                value={this.state.title}\n                onChange={(event) =>\n                  this.setState({ title: event.target.value })\n                }\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                multiline\n                id=\"description\"\n                name=\"description\"\n                label=\"Description\"\n                fullWidth\n                value={this.state.description}\n                onChange={(event) =>\n                  this.setState({ description: event.target.value })\n                }\n                //   autoComplete=\"billing address-line2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                select\n                id=\"color\"\n                name=\"color\"\n                label=\"color\"\n                value={this.state.color}\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ color: event.target.value })\n                }\n                //   autoComplete=\"billing address-level2\"\n              >\n                {color.map((option) => (\n                  <MenuItem key={option.value} value={option.value}>\n                    {option.label}\n                  </MenuItem>\n                ))}\n              </TextField>\n            </Grid>\n          </Grid>\n        </Paper>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.handleClick}\n        >\n          Add\n        </Button>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.props.handleToUpdate}\n        >\n          Back\n        </Button>\n      </Grid>\n    );\n    return body;\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(AddNote));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport {\n  Typography,\n  CssBaseline,\n  Checkbox,\n  Grid,\n  Button,\n} from \"@material-ui/core\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Card from \"@material-ui/core/Card\";\nimport { delNote, link } from \"../queries\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  title: {\n    fontSize: 14,\n  },\n  pos: {\n    marginBottom: 12,\n  },\n  root: {\n    width: \"100%\",\n  },\n}));\nclass DeleteNote extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      del: [],\n      selected: 0,\n      deleteflag: 0,\n      tasks: [],\n      username: this.props.username,\n      projectid: this.props.projectid,\n    };\n    this.handleClick = this.handleClick.bind(this);\n    // this.handleClick = this.handleClick.bind(this);\n  }\n  handleClick() {\n    //call delete here\n    let notesid = this.state.del;\n    console.log(notesid);\n    //call delete here\n    let success = false;\n    let x;\n    for (x of notesid) {\n      const operation = {\n        query: delNote,\n        variables: {\n          username: this.state.username,\n          noteid: x,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation)) // eslint-disable-next-line\n        .then((data) => {\n          console.log(data);\n          // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n          if (data.data.deleteNote.status === false) {\n            this.props.alert.error(data.data.deleteNote.msg);\n          }\n          if (data.data.deleteNote.status === true) {\n            // eslint-disable-next-line\n            this.props.alert.success(\"Success on delete\");\n          }\n        })\n        .catch((error) => this.props.alert.error(error));\n    }\n    success = true;\n    if (success) this.props.handleToUpdate();\n  }\n  render() {\n    // console.log(this.props.notes);\n    const { classes } = this.props;\n    let notes = this.props.notes.map((notes) => (\n      <ListItem button>\n        <Card className={classes.root}>\n          <CardContent>\n            <Typography\n              className={classes.title}\n              color=\"textSecondary\"\n              gutterBottom\n            >\n              Your Note\n            </Typography>\n            <Typography variant=\"h5\" component=\"h2\">\n              {notes.title}\n            </Typography>\n            <Typography className={classes.pos} color=\"textSecondary\">\n              Description\n            </Typography>\n            <Typography variant=\"body2\" component=\"p\">\n              {notes.description}\n            </Typography>\n          </CardContent>\n          <CardActions>\n            <Checkbox\n              edge=\"end\"\n              onChange={(event) => {\n                if (event.target.checked) {\n                  let okay = this.state.del;\n                  this.setState({ del: okay.concat([notes.noteid]) });\n                  this.setState({ selected: this.state.selected + 1 });\n                } else {\n                  let okay = this.state.del;\n                  const index = okay.indexOf(notes.noteid);\n                  if (index > -1) {\n                    okay.splice(index, 1);\n                  }\n                  this.setState({ del: okay });\n                  this.setState({ selected: this.state.selected - 1 });\n                }\n                console.log(\"selected:\" + this.state.selected);\n              }}\n            />\n          </CardActions>\n        </Card>\n      </ListItem>\n    ));\n    let button = (\n      <Grid container justify=\"center\" spacing={-4}>\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.handleClick}\n        >\n          Delete Note\n        </Button>\n      </Grid>\n    );\n    // console.log(this.props.files);\n    return (\n      <>\n        <CssBaseline />\n        {button}\n        {notes}\n      </>\n    );\n    // return filelist;\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(DeleteNote));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, Paper, Typography, Button } from \"@material-ui/core\";\nimport clsx from \"clsx\";\nimport Listnotes from \"../assets/listnotes\";\nimport AddNote from \"./AddNote\";\nimport DeleteNote from \"./DeleteNote\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { myNotes, projectNotes, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  innerpaper: {\n    display: \"flex\",\n    width: \"100%\",\n    // maxWidth: \"100%\",\n  },\n}));\n\nclass NotesList extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      action: \"view\",\n      notes: [],\n      username: this.props.username,\n      projectid: this.props.projectid,\n      fetchmethod: \"user\", // or project\n    };\n    this.pageUpdate = this.pageUpdate.bind(this);\n  }\n  pageUpdate() {\n    this.setState({ action: \"view\" });\n    // this.setState()\n  }\n\n  componentDidUpdate(prevProps, prevState) {\n    if (prevState.action !== \"view\" && this.state.action === \"view\") {\n      if (this.state.projectid === undefined) {\n        this.setState({ fetchmethod: \"user\" });\n        const operation = {\n          query: myNotes,\n          variables: {\n            username: this.state.username,\n          }, //optional\n        };\n\n        makePromise(execute(link, operation))\n          .then((data) => {\n            // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n            this.setState({ notes: data.data.myNotes });\n          })\n          .catch((error) => this.props.alert.error(error));\n      } else {\n        this.setState({ fetchmethod: \"project\" });\n        console.log(this.state.projectid);\n        const operation2 = {\n          query: projectNotes,\n          variables: {\n            projectid: this.state.projectid,\n          }, //optional\n        };\n\n        makePromise(execute(link, operation2))\n          .then((data) => {\n            // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n            this.setState({ notes: data.data.projectNotes });\n          })\n          .catch((error) => this.props.alert.error(error));\n      }\n    }\n  }\n\n  componentWillMount() {\n    if (this.props.projectid === undefined) {\n      this.setState({ fetchmethod: \"user\" });\n      const operation = {\n        query: myNotes,\n        variables: {\n          username: this.state.username,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation))\n        .then((data) => {\n          // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n          this.setState({ notes: data.data.myNotes });\n        })\n        .catch((error) => this.props.alert.error(error));\n    } else {\n      this.setState({ fetchmethod: \"project\" });\n      console.log(this.state.projectid);\n      console.log(this.props.projectid);\n      const operation2 = {\n        query: projectNotes,\n        variables: {\n          projectid: this.props.projectid,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation2))\n        .then((data) => {\n          console.log(data);\n          this.setState({ notes: data.data.projectNotes });\n        })\n        .catch((error) => this.props.alert.error(error));\n    }\n\n    ///fetch notes here\n  }\n\n  render() {\n    let body;\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    if (this.state.action === \"view\") {\n      body = (\n        <Listnotes notes={this.state.notes} handleToUpdate={this.pageUpdate} />\n      );\n    }\n    if (this.state.action === \"add\") {\n      body = (\n        <AddNote\n          username={this.state.username}\n          projectid={this.state.projectid}\n          fetchmethod={this.state.fetchmethod}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n    }\n    if (this.state.action === \"delete\") {\n      body = (\n        <DeleteNote\n          username={this.state.username}\n          projectid={this.state.projectid}\n          fetchmethod={this.state.fetchmethod}\n          handleToUpdate={this.pageUpdate}\n          notes={this.state.notes}\n        />\n      );\n    }\n\n    return (\n      <Grid item xs={12} md={4} lg={3}>\n        <Paper className={fixedHeightPaper}>\n          <Typography variant=\"h5\">Your Notes</Typography>\n          <Grid container item justify=\"center\" direction=\"row\">\n            <Button\n              color=\"primary\"\n              aria-label=\"edit\"\n              className={classes.buttonclass}\n              onClick={(event) => this.setState({ action: \"add\" })}\n            >\n              Add Note\n            </Button>\n            <Button\n              color=\"primary\"\n              aria-label=\"edit\"\n              className={classes.buttonclass}\n              onClick={(event) => this.setState({ action: \"delete\" })}\n            >\n              Delete\n            </Button>\n          </Grid>\n          {body}\n        </Paper>\n      </Grid>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(NotesList));\n","import React from \"react\";\nimport { Container, Grid, Typography, Box } from \"@material-ui/core\";\nimport { withStyles } from \"@material-ui/core\";\nimport { createStyles } from \"@material-ui/core/styles\";\nimport Paper from \"@material-ui/core/Paper\";\nimport backgrondimage from \"../img/background.jpg\";\nimport clsx from \"clsx\";\nimport Copyright from \"./Copyright\";\nimport ProjectFileManager from \"./ProjectFileManager\";\nimport TaskManagerProj from \"./TaskManagerProj\";\nimport NotesList from \"./NotesList\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { getProject, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  divforbutton: {\n    flexDirection: \"row\",\n    padding: theme.spacing(3),\n  },\n  buttonclass: {\n    margin: theme.spacing(3),\n  },\n  headinger: {\n    padding: theme.spacing(1),\n    // background: \"#FFFFFF\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n  maxheightpaper: {\n    height: \"100%\",\n  },\n}));\n\nclass ProjectsPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectid: this.props.projectid,\n      name: \"ProjectPage\",\n      date: \"\",\n      path: \"\",\n      username: this.props.username,\n      shortdescription: \"\",\n      longdescription:\n        \"Chal Hai ayyarrr idhhar kuchsdnisavue rbvaeuyvgiekru vbveryguviuaegivg evhaegivygeyg vkeviuaegvcvvbwaryvgauyv vabuiusvyd auy waygci\",\n      files: [],\n      members: [],\n      createdby: {\n        username: \"\",\n      },\n      loaded: 0,\n      tasks: {\n        ongoing: [],\n        all: [],\n        current: [],\n        inactive: [],\n        working: [],\n      },\n    };\n    this.fetchData = this.fetchData.bind(this);\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n  }\n\n  async handleToUpdate() {\n    await this.fetchData();\n  }\n  async fetchData() {\n    const operation1 = {\n      query: getProject,\n      variables: {\n        username: this.props.username,\n        projectid: this.props.projectid,\n      }, //optional\n    };\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        this.setState({\n          name: data.data.getProject.name,\n          createdon: data.data.getProject.createdon,\n          createdby: data.data.getProject.createdby.username,\n          path: data.data.getProject.path,\n          shortdescription: data.data.getProject.shortdescription,\n          longdescription: data.data.getProject.longdescription,\n          members: data.data.getProject.members,\n          loaded: 1,\n        });\n      })\n      .catch((error) => console.log(error));\n  }\n\n  componentWillMount() {\n    if (this.props.projectid !== undefined) {\n      this.setState({\n        projectid: this.props.projectid,\n      });\n      this.setState({ username: this.props.username });\n    }\n\n    this.setState({\n      files: [\n        { fileid: 1, filename: \"Okay 1\", lastupdated: \"2020-04-04\" },\n        {\n          fileid: 2,\n          filename: \"Okay 2\",\n          lastupdated: \"2020-04-04\",\n        },\n        {\n          fileid: 3,\n          filename: \"Okay 3\",\n          lastupdated: \"2020-04-04\",\n        },\n      ],\n      tasks: {\n        ongoing: [],\n        all: [],\n        current: [],\n        inactive: [],\n        working: [],\n      },\n    });\n    this.fetchData();\n\n    // console.log(this.state.tasks);\n  }\n\n  render() {\n    let projectmid, notes, tasks;\n\n    const { classes } = this.props;\n    // const fixedHeightPaper1 = clsx(\n    //   classes.paper,\n    //   classes.fixedHeight,\n    //   classes.background\n    // );\n    const fixedHeightPaper2 = clsx(\n      classes.paper,\n      classes.fixedHeight,\n      classes.background\n    );\n\n    if (this.state.loaded === 1) {\n      projectmid = (\n        <ProjectFileManager\n          files={this.state.files}\n          projectid={this.state.projectid}\n          members={this.state.members}\n          description={this.state.longdescription}\n          shortdescription={this.state.shortdescription}\n          date={this.state.createdon}\n          path={this.state.path}\n          name={this.state.name}\n          username={this.state.username}\n          handleToUpdate={this.handleToUpdate}\n        />\n      );\n    }\n\n    notes = (\n      <NotesList\n        username={this.state.username}\n        projectid={this.state.projectid}\n      />\n    );\n    tasks = (\n      <TaskManagerProj\n        username={this.state.username}\n        projectid={this.state.projectid}\n        tasks={this.state.tasks}\n      />\n    );\n\n    // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    return (\n      <Container maxWidth=\"xl\" className={classes.container}>\n        <Grid container spacing={3}>\n          <Grid item xs={12} md={8} lg={9}>\n            <Paper className={fixedHeightPaper2}>\n              <Typography variant=\"h3\" className={classes.headinger}>\n                {this.state.name}\n              </Typography>\n              {projectmid}\n            </Paper>\n          </Grid>\n          {notes}\n          {tasks}\n        </Grid>\n        <Box pt={4}>\n          <Copyright />\n        </Box>\n      </Container>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(ProjectsPage));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { Grid, TextField, Paper, Button } from \"@material-ui/core\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { createProject, link } from \"../queries\";\nimport { withAlert } from \"react-alert\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  root: {\n    width: \"80%\",\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    width: \"36%\",\n  },\n}));\n\nclass AddProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      name: \"\",\n      date: \"\",\n      path: \"\",\n      longdescription: \"\",\n      shortdescription: \"\",\n      members: null,\n    };\n    this.handleClick = this.handleClick.bind(this);\n  }\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({ username: this.props.username });\n    }\n  }\n  handleClick(event) {\n    // event.preventDefault();\n    try {\n      JSON.parse(this.state.members);\n    } catch (e) {\n      this.props.alert.error(e.message);\n    }\n\n    const operation = {\n      query: createProject,\n      variables: {\n        ld: this.state.longdescription,\n        name: this.state.name,\n        path: this.state.path,\n        sd: this.state.shortdescription,\n        username: this.state.username,\n        members: JSON.parse(this.state.members),\n      }, //optional\n    };\n\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.createProject.status === false) {\n          this.props.alert.error(data.data.createProject.msg);\n        }\n        if (data.data.createProject.status === true) {\n          this.props.alert.success(\"Success on adding project\");\n          this.props.handleToUpdate();\n        }\n      })\n      .catch((error) => this.props.alert.error(error.message));\n  }\n  render() {\n    const { classes } = this.props;\n    var today = new Date();\n    var dd = String(today.getDate()).padStart(2, \"0\");\n    var mm = String(today.getMonth() + 1).padStart(2, \"0\"); //January is 0!\n    var yyyy = today.getFullYear();\n\n    today = yyyy + \"-\" + mm + \"-\" + dd;\n    return (\n      <>\n        <Paper className={classes.root}>\n          <Grid container spacing={3}>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"Name\"\n                name=\"Name\"\n                label=\"Project name\"\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ name: event.target.value })\n                }\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"description1\"\n                name=\"description1\"\n                label=\"Short Description 1\"\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ shortdescription: event.target.value })\n                }\n                //   autoComplete=\"billing address-line1\"\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                multiline\n                id=\"description2\"\n                name=\"description2\"\n                label=\"Description\"\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ longdescription: event.target.value })\n                }\n                //   autoComplete=\"billing address-line2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                required\n                id=\"path\"\n                name=\"path\"\n                label=\"path\"\n                fullWidth\n                onChange={(event) =>\n                  this.setState({ path: event.target.value })\n                }\n                //   autoComplete=\"billing address-level2\"\n              />\n            </Grid>\n            <Grid item xs={12} sm={6}>\n              <TextField\n                type=\"date\"\n                id=\"date\"\n                name=\"date\"\n                label=\"Date\"\n                defaultValue={today}\n                fullWidth\n                inputProps={{ readOnly: true }}\n                onChange={(event) =>\n                  this.setState({\n                    date: event.target.value + \"T07:13:05+00:00\",\n                  })\n                }\n              />\n            </Grid>\n            <Grid item xs={12}>\n              <TextField\n                required\n                id=\"title\"\n                name=\"titile\"\n                label=\"Member : Enter members in json format [{'username':'ksp','role':'leader'},{}]\"\n                fullWidth\n                onChange={(event) => {\n                  this.setState({ members: event.target.value });\n                }}\n                //\n                //   autoComplete=\"fname\"\n              />\n            </Grid>\n          </Grid>\n        </Paper>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) => this.handleClick(event)}\n        >\n          Add Project\n        </Button>\n        <Button\n          type=\"submit\"\n          fullWidth\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={this.props.handleToUpdate}\n        >\n          Back\n        </Button>\n      </>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(AddProject));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport WorkIcon from \"@material-ui/icons/Work\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Grid from \"@material-ui/core/Grid\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport { ListItemSecondaryAction, Checkbox, Button } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\n\n// import { withAlert } from \"react-alert\";\n//  import Card from \"./Card\";\n// import ListSubheader from \"@material-ui/core/ListSubheader\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  submit: {\n    margin: theme.spacing(3, 0, 2),\n    padding: theme.spacing(2),\n  },\n}));\nclass Listdelproj extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      del: [],\n      selected: 0,\n    };\n    // this.managestate = this.managestate.bind(this);\n  }\n\n  componentDidUpdate() {\n    if (this.state.selected > 1) {\n      this.props.alert.info(\"deleting more than one project is not advised\");\n    }\n  }\n\n  render() {\n    const { classes } = this.props;\n    let list = this.props.project.map((project) => (\n      <>\n        <ListItem button>\n          <ListItemAvatar>\n            <Avatar className={classes.avatar}>\n              <WorkIcon />\n            </Avatar>\n          </ListItemAvatar>\n          <Grid container direction=\"column\">\n            <Typography variant=\"h6\">{project.name}</Typography>\n\n            <ListItemText\n              primary={project.shortdescription}\n              secondary={\n                `Started: ` + project.date + ` Created By: ` + project.username\n              }\n            ></ListItemText>\n            <ListItemSecondaryAction>\n              <Checkbox\n                edge=\"end\"\n                onChange={(event) => {\n                  if (event.target.checked) {\n                    let okay = this.state.del;\n                    this.setState({ del: okay.concat([project.projectid]) });\n                    this.setState({ selected: this.state.selected + 1 });\n                  } else {\n                    let okay = this.state.del;\n                    const index = okay.indexOf(project.projectid);\n                    if (index > -1) {\n                      okay.splice(index, 1);\n                    }\n                    this.setState({ del: okay });\n                    this.setState({ selected: this.state.selected - 1 });\n                  }\n                  console.log(\"selected:\" + this.state.selected);\n                }}\n              />\n            </ListItemSecondaryAction>\n            {/* <Card project={this.props.project}></Card> */}\n          </Grid>\n        </ListItem>\n      </>\n    ));\n    let button = (\n      <Grid container justify=\"center\">\n        <Button\n          type=\"submit\"\n          variant=\"contained\"\n          color=\"primary\"\n          className={classes.submit}\n          onClick={(event) =>\n            this.props.handleToUpdate(this.state.del, this.state.selected)\n          }\n        >\n          Delete Project\n        </Button>\n      </Grid>\n    );\n    return [button, list];\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(Listdelproj));\n","import React from \"react\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport Listdelproj from \"../assets/listdelproj\";\nimport { Paper } from \"@material-ui/core\";\nimport { withAlert } from \"react-alert\";\nimport { deleteProject, link } from \"../queries\";\nimport { execute, makePromise } from \"apollo-link\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  button: {\n    padding: theme.spacing(2),\n  },\n}));\n\nclass DeleteProject extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      projectid: [],\n      selected: 0,\n      deleteflag: 0,\n      projects: this.props.projects,\n      username: \"\",\n    };\n    this.handleUpdate = this.handleUpdate.bind(this);\n    // this.handleClick = this.handleClick.bind(this);\n  }\n  handleUpdate(projid, number) {\n    let success = false;\n    this.setState({ projectid: projid, selected: number, deleteflag: 1 });\n    let x;\n    for (x of projid) {\n      const operation = {\n        query: deleteProject,\n        variables: {\n          username: this.state.username,\n          projectid: x,\n        }, //optional\n      };\n\n      makePromise(execute(link, operation)) // eslint-disable-next-line\n        .then((data) => {\n          console.log(data);\n          // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n          if (data.data.deleteProject.status === false) {\n            this.props.alert.error(data.data.deleteProject.msg);\n          }\n          if (data.data.deleteProject.status === true) {\n            // eslint-disable-next-line\n            this.props.alert.success(\"Success on delete\");\n          }\n        })\n        .catch((error) => this.props.alert.error(error));\n    }\n\n    success = true;\n    if (success) this.props.handleToUpdate();\n  }\n  componentDidUpdate() {\n    if (this.state.deleteflag === 1) {\n      this.setState({ deleteflag: 0 });\n      this.props.alert.success(\"sucessfully deleted\");\n      this.props.handleToUpdate();\n\n      //call delete here\n    }\n  }\n  componentWillMount() {\n    this.setState({ username: this.props.username });\n  }\n  render() {\n    const { classes } = this.props;\n    let projectson = this.state.projects.ongoing.concat(\n      this.state.projects.completed\n    );\n    return (\n      <Paper className={classes.root}>\n        <Listdelproj project={projectson} handleToUpdate={this.handleUpdate} />\n      </Paper>\n    );\n  }\n}\n\nexport default withAlert()(withStyles(useStyles)(DeleteProject));\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Footer from \"./components/Footer\";\nimport clsx from \"clsx\";\nimport { Typography } from \"@material-ui/core\";\nimport Fab from \"@material-ui/core/Fab\";\nimport AddIcon from \"@material-ui/icons/Add\";\nimport DeleteRounded from \"@material-ui/icons/DeleteRounded\";\nimport ProjectList from \"./components/ProjectList\";\nimport backgrondimage from \"./img/background.jpg\";\nimport ProjectsPage from \"./components/ProjectsPage\";\nimport AddProject from \"./components/AddProject\";\nimport DeleteProject from \"./components/DeleteProject\";\nimport { withAlert } from \"react-alert\";\nimport NotesList from \"./components/NotesList\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { myProjects, link } from \"./queries\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  divforbutton: {\n    flexDirection: \"row\",\n    padding: theme.spacing(3),\n  },\n  buttonclass: {\n    margin: theme.spacing(3),\n  },\n  headinger: {\n    padding: theme.spacing(1),\n    // background: \"#FFFFFF\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Projects extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"\",\n      projectid: 42069,\n      loaded: 0,\n      projectlist: [],\n    };\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n    this.pageUpdate = this.pageUpdate.bind(this);\n    this.fetchdata = this.fetchdata.bind(this);\n    // this.fetchdata();\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  handleToUpdate(projectid1, redirect) {\n    if (redirect === 1) {\n      this.setState({ projectid: projectid1, pagename: \"projectpage\" });\n    }\n  }\n  async pageUpdate() {\n    await this.fetchdata();\n    this.setState({ pagename: \"projects\" });\n  }\n  componentWillMount() {\n    this.setState({ loaded: 0 });\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n        pagename: this.props.pagename,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n        pagename: this.props.location.state.pagename,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n    // this.fetchdata();\n    // this.setState({ pagename: \"projects\" });\n  }\n  async fetchdata() {\n    let ongoing = [{}];\n    const operation1 = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"ongoing\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data) {\n          ongoing = data.data.myProjects;\n        }\n      })\n      .catch((error) => this.props.alert.error(error));\n\n    let completed;\n    const operation = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"completed\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        completed = data.data.myProjects;\n        console.log(completed);\n        let projectlist = {\n          ongoing: ongoing,\n          completed: completed,\n        };\n        // console.log(projectlist);\n        this.setState({ projectlist: projectlist, loaded: 1 });\n        console.log(this.state.projectlist);\n      })\n      .catch((error) => this.props.alert.error(error));\n  }\n\n  async componentDidMount() {\n    await this.fetchdata();\n    this.setState({ pagename: \"projects\" });\n  }\n\n  render() {\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    if (this.state.loaded === 0) {\n      return null;\n    }\n    let mid, maincontent;\n    const { classes } = this.props;\n    const fixedHeightPaper1 = clsx(\n      classes.paper,\n      classes.fixedHeight,\n      classes.background\n    );\n    // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    let aftermid = <NotesList username={this.state.username} />;\n    if (this.state.pagename === \"projects\") {\n      if (this.state.projectlist.completed || this.state.projectlist.ongoing) {\n        mid = (\n          <>\n            <Grid container item justify=\"center\" direction=\"row\">\n              <Fab\n                color=\"primary\"\n                aria-label=\"add\"\n                className={classes.buttonclass}\n                onClick={(event) => this.setState({ pagename: \"addproject\" })}\n              >\n                <AddIcon />\n              </Fab>\n              <Fab\n                color=\"secondary\"\n                aria-label=\"delete\"\n                className={classes.buttonclass}\n                onClick={(event) =>\n                  this.setState({ pagename: \"deleteproject\" })\n                }\n              >\n                <DeleteRounded />\n              </Fab>\n            </Grid>\n            <ProjectList\n              projectlist={this.state.projectlist}\n              handleToUpdate={this.handleToUpdate}\n            />\n          </>\n        );\n\n        maincontent = (\n          <Container maxWidth=\"xl\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper1}>\n                  <Typography variant=\"h3\" className={classes.headinger}>\n                    Your Projects\n                  </Typography>\n\n                  {mid}\n                </Paper>\n              </Grid>\n              {aftermid}\n              <Footer />\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        );\n      }\n    }\n    if (this.state.pagename === \"projectpage\") {\n      maincontent = (\n        <ProjectsPage\n          projectid={this.state.projectid}\n          username={this.state.username}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n    }\n    if (this.state.pagename === \"addproject\") {\n      mid = (\n        <AddProject\n          username={this.state.username}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n      maincontent = (\n        <Container maxWidth=\"xl\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper1}>\n                <Typography variant=\"h3\" className={classes.headinger}>\n                  Add Project\n                </Typography>\n\n                {mid}\n              </Paper>\n            </Grid>\n            {aftermid}\n            <Footer />\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      );\n    }\n    if (this.state.pagename === \"deleteproject\") {\n      mid = (\n        <DeleteProject\n          username={this.state.username}\n          projects={this.state.projectlist}\n          handleToUpdate={this.pageUpdate}\n        />\n      );\n      maincontent = (\n        <Container maxWidth=\"xl\" className={classes.container}>\n          <Grid container spacing={3}>\n            <Grid item xs={12} md={8} lg={9}>\n              <Paper className={fixedHeightPaper1}>\n                <Typography variant=\"h3\" className={classes.headinger}>\n                  Delete Project\n                </Typography>\n\n                {mid}\n              </Paper>\n            </Grid>\n            {aftermid}\n            <Footer />\n          </Grid>\n          <Box pt={4}>\n            <Copyright />\n          </Box>\n        </Container>\n      );\n    }\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          string={\"User:\" + this.state.username}\n          username={this.state.username}\n          authenticated={this.state.authenticated}\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          {maincontent}\n        </main>\n      </div>\n    );\n  }\n}\nexport default withAlert()(withStyles(useStyles)(Projects));\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Footer from \"./components/Footer\";\nimport clsx from \"clsx\";\nimport { Typography } from \"@material-ui/core\";\nimport backgrondimage from \"./img/background.jpg\";\nimport TaskView from \"./components/TaskView\";\nimport TaskList from \"./components/TasksList\";\nimport NotesList from \"./components/NotesList\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { myTasks, link } from \"./queries\";\nimport { withAlert } from \"react-alert\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n    height: \"100%\",\n  },\n  extendedIcon: {\n    marginRight: theme.spacing(1),\n  },\n  divforbutton: {\n    flexDirection: \"column\",\n    padding: theme.spacing(3),\n  },\n  buttonclass: {\n    margin: theme.spacing(3),\n  },\n  headinger: {\n    padding: theme.spacing(1),\n    // background: \"#FFFFFF\",\n    // colorPrimary: \"$FF\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Tasks extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"tasks\",\n      tasklist: [],\n      taskid: 42069,\n      redirect: 0,\n      loaded: 0,\n      active: [],\n      inactive: [],\n      all: [],\n      completed: [],\n      working: [],\n    };\n    this.handleToUpdate = this.handleToUpdate.bind(this);\n    this.fetchDataFilter = this.fetchDataFilter.bind(this);\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  async fetchDataFilter(Filter) {\n    const operation1 = {\n      query: myTasks,\n      variables: {\n        username: this.state.username,\n        taskFilter: Filter,\n      }, //optional\n    };\n    let tasklist;\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data) {\n          tasklist = data.data.myTasks;\n          console.log(tasklist);\n          // return tasklist;\n          if (Filter === null) {\n            this.setState({ all: tasklist });\n          }\n          if (Filter === \"inactive\") {\n            this.setState({ inactive: tasklist });\n          }\n          if (Filter === \"active\") {\n            this.setState({ active: tasklist });\n          }\n          if (Filter === \"completed\") {\n            this.setState({ completed: tasklist });\n          }\n          if (Filter === \"working\") {\n            this.setState({ working: tasklist });\n          }\n        }\n      })\n      .catch((error) => this.props.alert.error(error));\n  }\n\n  async fetchalldata() {\n    await this.fetchDataFilter(null);\n    await this.fetchDataFilter(\"completed\");\n    await this.fetchDataFilter(\"working\");\n    await this.fetchDataFilter(\"inactive\");\n    await this.fetchDataFilter(\"active\");\n    let tasklist = {\n      inactive: this.state.inactive,\n      working: this.state.working,\n      active: this.state.active,\n      completed: this.state.completed,\n      all: this.state.all,\n    };\n    this.setState({ tasklist: tasklist, loaded: 1 });\n    console.log(this.state.tasklist);\n  }\n\n  handleToUpdate(taskid) {\n    this.setState({ taskid: taskid, pagename: \"viewtask\" });\n  }\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n  }\n  async componentDidMount() {\n    console.log(this.state.username);\n    console.log(this.state.authenticated);\n    await this.fetchalldata();\n  }\n\n  render() {\n    let mid;\n    const { classes } = this.props;\n    const fixedHeightPaper1 = clsx(\n      classes.paper,\n      classes.fixedHeight,\n      classes.background\n    );\n    // const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    let aftermid = <NotesList username={this.state.username} />;\n    if (this.state.pagename === \"viewtask\") {\n      mid = (\n        <TaskView\n          username={this.state.username}\n          projectid={this.state.projectid}\n          taskid={this.state.taskid}\n        />\n      );\n    }\n    if (this.state.pagename === \"tasks\" && this.state.loaded === 1) {\n      console.log(this.state.tasklist);\n      mid = (\n        <TaskList\n          tasklist={this.state.tasklist}\n          handleToUpdate={this.handleToUpdate}\n        />\n      );\n    }\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          string={\"User:\" + this.state.username}\n          username={this.state.username}\n          authenticated={this.state.authenticated}\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper1}>\n                  <Typography variant=\"h3\" className={classes.headinger}>\n                    Your Tasks\n                  </Typography>\n                  {mid}\n                </Paper>\n              </Grid>\n              {aftermid}\n              <Footer />\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withAlert()(withStyles(useStyles)(Tasks));\n","import React from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport ListItemAvatar from \"@material-ui/core/ListItemAvatar\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport FileCopy from \"@material-ui/icons/FileCopy\";\n// import Paper from \"@material-ui/core/Paper\";\nimport { Typography, CssBaseline } from \"@material-ui/core\";\n\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nconst useStyles = createStyles((theme) => ({\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n}));\nclass Listprojrep extends React.Component {\n  render() {\n    const { classes } = this.props;\n    let projectlist = this.props.projects.map((projects) => (\n      <ListItem\n        button\n        onClick={() => this.props.handleToUpdate(projects.projectid)}\n      >\n        <ListItemAvatar>\n          <Avatar className={classes.avatar}>\n            <FileCopy />\n          </Avatar>\n        </ListItemAvatar>\n        <ListItemText\n          primary={projects.name}\n          secondary={`Last updated: ` + projects.shortdescription}\n        ></ListItemText>\n        {/* <Card project={this.props.project}></Card> */}\n      </ListItem>\n    ));\n    // console.log(this.props.files);\n    return (\n      <>\n        <CssBaseline />\n        <Typography variant=\"h5\">Your Project List for Reports</Typography>\n        {projectlist}\n      </>\n    );\n    // return projectlist;\n  }\n}\n\nexport default withStyles(useStyles)(Listprojrep);\n","import React, { PureComponent } from \"react\";\nimport { PieChart, Pie, Cell } from \"recharts\";\n\nconst data = [\n  { name: \"Group A\", value: 400 },\n  { name: \"Group B\", value: 300 },\n  { name: \"Group C\", value: 300 },\n  { name: \"Group D\", value: 200 },\n  { name: \"Group E\", value: 100 },\n];\nconst COLORS = [\n  \"#0088FE\",\n  \"#00C49F\",\n  \"#FFBB28\",\n  \"#FF8042\",\n  \"#AF8F42\",\n  \"FE0349\",\n];\n\nexport default class PC extends PureComponent {\n  render() {\n    return (\n      <PieChart width={400} height={400} onMouseEnter={this.onPieEnter}>\n        <Pie\n          data={this.props.data}\n          cx={200}\n          cy={200}\n          innerRadius={60}\n          outerRadius={120}\n          fill=\"#8884d8\"\n          paddingAngle={5}\n          dataKey=\"value\"\n          label={true}\n        >\n          {data.map((entry, index) => (\n            <Cell key={`cell-${index}`} fill={COLORS[index % COLORS.length]} />\n          ))}\n        </Pie>\n      </PieChart>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Footer from \"./components/Footer\";\nimport clsx from \"clsx\";\nimport NotesList from \"./components/NotesList\";\nimport { Typography } from \"@material-ui/core\";\nimport backgrondimage from \"./img/background.jpg\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { myProjects, getProjectReport, getUserReport, link } from \"./queries\";\nimport Listprojrep from \"./assets/listprojrep\";\nimport PC from \"./PieChart\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  background: {\n    backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Reports extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"reports\",\n      active: \"\",\n      inactive: \"\",\n      completed: \"\",\n      completedbefore: \"\",\n      completedafter: \"\",\n      total: \"\",\n      pactive: \"\",\n      pinactive: \"\",\n      pcompleted: \"\",\n      pcompletedbefore: \"\",\n      pcompletedafter: \"\",\n      ptotal: \"\",\n      innerpagename: \"projectsel\",\n      projectid: 0,\n      loaded: 0,\n      projectlist: [],\n      projectname: \"\",\n      loadedproject: 0,\n      //   projectlist: { ongoing: null, completed: null },\n    };\n    this.fetchProjects = this.fetchProjects.bind(this);\n    this.fetchUserReport = this.fetchUserReport.bind(this);\n    this.handleProjectSelection = this.handleProjectSelection.bind(this);\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n  }\n\n  async handleProjectSelection(projectid, projectname) {\n    this.setState({ projectid: projectid, projectname: projectname });\n    const operation = {\n      query: getProjectReport,\n      variables: {\n        projectid: projectid,\n        // projectFilter: \"completed\",\n      }, //optional\n    };\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        let a = data.data.getProjectReport;\n        this.setState({\n          pactive: a.active,\n          pinactive: a.inative,\n          pcompleted: a.completed,\n          pcompletedbefore: a.completedBefore,\n          pcompletedafter: a.completedAfter,\n          pworking: a.working,\n          ptotal: a.total,\n        });\n      })\n      .catch((error) => this.props.alert.error(error));\n    this.setState({ innerpagename: \"projectreport\", loadedproject: 1 });\n  }\n\n  async fetchProjects() {\n    let ongoing = [{}];\n    const operation1 = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"ongoing\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        if (data.data) {\n          ongoing = data.data.myProjects;\n        }\n      })\n      .catch((error) => this.props.alert.error(error));\n\n    let completed;\n    const operation = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"completed\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        completed = data.data.myProjects;\n        // console.log(completed);\n        // console.log(projectlist);\n        this.setState({\n          projectlist: ongoing.concat(completed),\n          loaded: 1,\n        });\n        console.log(this.state.projectlist);\n      })\n      .catch((error) => this.props.alert.error(error));\n  }\n\n  async fetchUserReport() {\n    const operation = {\n      query: getUserReport,\n      variables: {\n        username: this.state.username,\n        // projectFilter: \"completed\",\n      }, //optional\n    };\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        let a = data.data.getUserReport;\n        this.setState({\n          active: a.active,\n          inactive: a.inative,\n          completed: a.completed,\n          completedbefore: a.completedBefore,\n          completedafter: a.completedAfter,\n          working: a.working,\n          total: a.total,\n        });\n      })\n      .catch((error) => this.props.alert.error(error));\n  }\n  async componentDidMount() {\n    await this.fetchProjects();\n    await this.fetchUserReport();\n  }\n\n  render() {\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(\n      classes.paper,\n      classes.fixedHeight,\n      classes.background\n    );\n    let projectinner;\n    if (this.state.loaded === 1 && this.state.innerpagename === \"projectsel\") {\n      projectinner = (\n        <Listprojrep\n          projects={this.state.projectlist}\n          handleToUpdate={this.handleProjectSelection}\n        />\n      );\n    }\n    if (this.state.innerpagename === \"projectreport\") {\n      projectinner = (\n        <>\n          <Typography vairant=\"h5\" padding=\"20\">\n            {this.state.projectname}\n          </Typography>\n          <Typography variant=\"h6\">\n            {\" \"}\n            Active Tasks:{this.state.pactive}{\" \"}\n          </Typography>\n          <Typography variant=\"h6\">\n            Inactive Tasks:{this.state.pinactive}{\" \"}\n          </Typography>\n          <Typography variant=\"h6\">\n            Completed Tasks:{this.state.pcompleted}{\" \"}\n          </Typography>\n          <Typography variant=\"h6\">\n            Completed Before:{this.state.pcompletedbefore}{\" \"}\n          </Typography>\n          <Typography variant=\"h6\">\n            Completed After:{this.state.pcompletedafter}{\" \"}\n          </Typography>\n          <Typography variant=\"h6\">Total:{this.state.ptotal} </Typography>\n          <br></br>\n          <Typography variant=\"h6\">Visual PieChart</Typography>\n          {/* <PieChart /> */}\n          <PC\n            data={[\n              {\n                name: \"Active\",\n                value: this.state.pactive,\n              },\n              {\n                name: \"Inactive\",\n                value: this.state.pinactive,\n              },\n              {\n                name: \"Completed\",\n                value: this.state.pcompleted,\n              },\n              {\n                name: \"CompletedBefore\",\n                value: this.state.pcompletedbefore,\n              },\n              {\n                name: \"CompletedAfter\",\n                value: this.state.pcompletedafter,\n              },\n              {\n                name: \"Total\",\n                value: this.state.ptotal,\n              },\n            ]}\n          />\n          <Button\n            color=\"primary\"\n            aria-label=\"edit\"\n            onClick={() =>\n              this.setState({\n                innerpagename: \"projectsel\",\n                loadedproject: 0,\n              })\n            }\n          >\n            Back\n          </Button>\n        </>\n      );\n    }\n    if (this.state.loaded === 1) {\n      return (\n        <div className={classes.root}>\n          <CssBaseline />\n          <Header\n            string={\"User:\" + this.state.username}\n            username={this.state.username}\n            authenticated={this.state.authenticated}\n          />\n          <main className={classes.content}>\n            <div className={classes.appBarSpacer} />\n            <Container maxWidth=\"xl\" className={classes.container}>\n              <Grid container spacing={3}>\n                <Grid item xs={12} md={8} lg={9}>\n                  <Paper className={fixedHeightPaper}>\n                    <Grid\n                      container\n                      justify=\"center\"\n                      direction=\"row\"\n                      spacing={2}\n                    >\n                      <Grid\n                        item\n                        direction=\"row\"\n                        justify=\"center\"\n                        className={classes.root}\n                        xs={12}\n                        sm={6}\n                      >\n                        <Paper className={classes.paper}>\n                          <Typography variant=\"h4\">\n                            User Based Report\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Active Tasks:{this.state.active}{\" \"}\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Inactive Tasks:{this.state.inactive}{\" \"}\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Completed Tasks:{this.state.completed}{\" \"}\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Completed Before:{this.state.completedbefore}{\" \"}\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Completed After:{this.state.completedafter}{\" \"}\n                          </Typography>\n                          <Typography variant=\"h6\">\n                            Total:{this.state.total}{\" \"}\n                          </Typography>\n                          <br></br>\n                          <Typography variant=\"h6\">Visual PieChart</Typography>\n                          <PC\n                            data={[\n                              {\n                                name: \"Active\",\n                                value: this.state.active,\n                              },\n                              {\n                                name: \"Inactive\",\n                                value: this.state.inactive,\n                              },\n                              {\n                                name: \"Completed\",\n                                value: this.state.completed,\n                              },\n                              {\n                                name: \"CompletedBefore\",\n                                value: this.state.completedbefore,\n                              },\n                              {\n                                name: \"CompletedAfter\",\n                                value: this.state.completedafter,\n                              },\n                              {\n                                name: \"Total\",\n                                value: this.state.total,\n                              },\n                            ]}\n                          />\n                        </Paper>\n                      </Grid>\n                      <Grid\n                        item\n                        direction=\"row\"\n                        justify=\"center\"\n                        className={classes.root}\n                        xs={12}\n                        sm={6}\n                      >\n                        <Paper className={classes.paper}>\n                          <Typography variant=\"h4\">\n                            Project Based Report\n                          </Typography>\n                          {projectinner}\n                        </Paper>\n                      </Grid>\n                    </Grid>\n                  </Paper>\n                </Grid>\n                <NotesList username={this.state.username} />;\n                <Footer />\n              </Grid>\n              <Box pt={4}>\n                <Copyright />\n              </Box>\n            </Container>\n          </main>\n        </div>\n      );\n    }\n    return null;\n  }\n}\nexport default withStyles(useStyles)(Reports);\n","import React, { PureComponent } from \"react\";\nimport {\n  LineChart,\n  Line,\n  XAxis,\n  YAxis,\n  CartesianGrid,\n  Tooltip,\n  Legend,\n  // ResponsiveContainer,\n} from \"recharts\";\n\nexport default class Rechart extends PureComponent {\n  static jsfiddleUrl = \"https://jsfiddle.net/alidingling/xqjtetw0/\";\n\n  render() {\n    return (\n      // <ResponsiveContainer>\n      <LineChart width={900} height={500} data={this.props.data}>\n        <CartesianGrid strokeDasharray=\"3 3\" />\n        <XAxis dataKey=\"date\" />\n        <YAxis />\n        <Tooltip />\n        <Legend />\n        <Line\n          type=\"monotone\"\n          dataKey=\"newTask\"\n          stroke=\"#8884d8\"\n          activeDot={{ r: 8 }}\n        />\n        <Line type=\"monotone\" dataKey=\"Taskcompleted\" stroke=\"#82ca9d\" />\n      </LineChart>\n      // </ResponsiveContainer>\n    );\n  }\n}\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Footer from \"./components/Footer\";\nimport clsx from \"clsx\";\nimport NotesList from \"./components/NotesList\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { execute, makePromise } from \"apollo-link\";\nimport Recharts from \"./Recharts\";\nimport {\n  myProjects,\n  getProjectAnalytics,\n  getCumulativeProjectAnalytics,\n  link,\n} from \"./queries\";\nimport Listprojrep from \"./assets/listprojrep\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: \"100%\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  background: {\n    // backgroundImage: `url(${backgrondimage})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Analytics extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"analytics\",\n      datapa: {},\n      datapca: {},\n      innerpagename: \"projectsel\",\n      loaded: 0,\n      loadedstate: 1,\n      startdate: \"2010-10-10\",\n      enddate: \"2010-10-10\",\n      projectlist: [],\n      //   projectlist: { ongoing: null, completed: null },\n    };\n    this.handleProjectSelection = this.handleProjectSelection.bind(this);\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  async handleProjectSelection(projectid, projectname) {\n    this.setState({ loadedstate: 0 });\n    const operation = {\n      query: getProjectAnalytics,\n      variables: {\n        projectid: projectid,\n        startdate: this.state.startdate,\n        enddate: this.state.enddate,\n        // projectFilter: \"completed\",\n      }, //optional\n    };\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        this.setState({ datapa: data.data.getProjectAnalytics });\n      })\n      .catch((error) => this.props.alert.error(error));\n    const operation2 = {\n      query: getCumulativeProjectAnalytics,\n      variables: {\n        projectid: projectid,\n        startdate: this.state.startdate,\n        enddate: this.state.enddate,\n        // projectFilter: \"completed\",\n      }, //optional\n    };\n    await makePromise(execute(link, operation2))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        this.setState({ datapca: data.data.getCumulativeProjectAnalytics });\n      })\n      .catch((error) => this.props.alert.error(error));\n\n    this.setState({\n      innerpagename: \"projectanalytics\",\n      projectname: projectname,\n      loadedstate: 1,\n    });\n  }\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n  }\n  async componentDidMount() {\n    // console.log(this.state.username);\n    // console.log(this.state.authenticated);\n    await this.fetchProjects();\n  }\n\n  async fetchProjects() {\n    let ongoing = [{}];\n    const operation1 = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"ongoing\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation1))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        if (data.data) {\n          ongoing = data.data.myProjects;\n        }\n      })\n      .catch((error) => this.props.alert.error(error));\n\n    let completed;\n    const operation = {\n      query: myProjects,\n      variables: {\n        username: this.state.username,\n        projectFilter: \"completed\",\n      }, //optional\n    };\n\n    await makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        // console.log(data);\n        completed = data.data.myProjects;\n        // console.log(completed);\n        // console.log(projectlist);\n        this.setState({\n          projectlist: ongoing.concat(completed),\n          loaded: 1,\n        });\n        // console.log(this.state.projectlist);\n      })\n      .catch((error) => this.props.alert.error(error));\n  }\n\n  render() {\n    let midpage;\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    if (this.state.innerpagename === \"projectsel\" && this.state.loaded === 1) {\n      midpage = (\n        <Grid item xs={12}>\n          <Listprojrep\n            projects={this.state.projectlist}\n            handleToUpdate={this.handleProjectSelection}\n          />\n        </Grid>\n      );\n    }\n\n    if (\n      this.state.innerpagename === \"projectanalytics\" &&\n      this.state.loadedstate === 1\n    ) {\n      midpage = (\n        <>\n          <Grid item xs={12}>\n            <Typography variant=\"h5\">\n              {`Project Analytics ` + this.state.projectname}\n            </Typography>\n          </Grid>\n          <Grid item xs={12}>\n            <Recharts data={this.state.datapa} />\n          </Grid>\n          <Grid item xs={12}>\n            <Recharts data={this.state.datapca} />\n          </Grid>\n          <Grid item xs={12}>\n            <Button\n              type=\"submit\"\n              fullWidth\n              variant=\"contained\"\n              color=\"primary\"\n              className={classes.submit}\n              onClick={() => this.setState({ innerpagename: \"projectsel\" })}\n            >\n              Back\n            </Button>\n          </Grid>\n        </>\n      );\n    }\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          string={\"User:\" + this.state.username}\n          username={this.state.username}\n          authenticated={this.state.authenticated}\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9}>\n                <Paper className={fixedHeightPaper}>\n                  <Grid container spacing={3}>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h3\">Project Analytics</Typography>\n                    </Grid>\n                    <Grid item xs={12}>\n                      <Typography variant=\"h5\">\n                        Click on Project to get analytics for selected dates\n                      </Typography>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        type=\"date\"\n                        id=\"date\"\n                        name=\"date\"\n                        helperText=\"Start Date\"\n                        fullWidth\n                        onChange={(event) => {\n                          this.setState({\n                            startdate: event.target.value,\n                          });\n                        }}\n                      />\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                      <TextField\n                        type=\"date\"\n                        id=\"date\"\n                        name=\"date\"\n                        helperText=\"End Date\"\n                        fullWidth\n                        onChange={(event) => {\n                          this.setState({\n                            enddate: event.target.value,\n                          });\n                        }}\n                      />\n                    </Grid>\n                    {midpage}\n                  </Grid>\n                </Paper>\n              </Grid>\n              <NotesList username={this.state.username} />;\n              <Footer />\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withStyles(useStyles)(Analytics);\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport { Avatar, Typography, TextField, Button } from \"@material-ui/core\";\nimport PeopleIcon from \"@material-ui/icons/People\";\nimport Footer from \"./components/Footer\";\nimport { execute, makePromise } from \"apollo-link\";\nimport { getUser, link, changeName, changePassword } from \"./queries\";\nimport { withAlert } from \"react-alert\";\nimport browndesk from \"./img/browndesk.jpg\";\nimport clsx from \"clsx\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    margin: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    height: 500,\n    width: \"100%\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n  avatar: {\n    margin: theme.spacing(1),\n    backgroundColor: theme.palette.secondary.main,\n  },\n  background: {\n    backgroundImage: `url(${browndesk})`,\n    backgroundSize: \"cover\",\n\n    backgroundRepeat: \"no-repeat\",\n  },\n}));\n\nclass Settings extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"settings\",\n      first_name: \"\",\n      last_name: \"\",\n      newpassword: \"\",\n      oldpassword: \"\",\n      //   projectlist: { ongoing: null, completed: null },\n    };\n    this.handleClickName = this.handleClickName.bind(this);\n    this.handleClickPassword = this.handleClickPassword.bind(this);\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  handleClickName() {\n    const operation = {\n      query: changeName,\n      variables: {\n        newfirstname: this.state.first_name,\n        newlastname: this.state.last_name,\n        username: this.state.username,\n      }, //optional\n    };\n\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.changeName.status === true) {\n          this.props.alert.success(\"Changed Name Succesfully Refresh\");\n          this.setState({ signup: data.data.changeName.status });\n        } else {\n          this.props.alert.error(data.data.changeName.msg);\n        }\n        this.setState({ message: data.data.changeName.msg });\n\n        // console.log(data.data.createUser.status);\n        // console.log(data.createUser.status);\n      })\n      .catch((error) => console.log(`received error ${error}`));\n  }\n\n  handleClickPassword() {\n    const operation = {\n      query: changePassword,\n      variables: {\n        newpassword: this.state.newpassword,\n        oldpassword: this.state.oldpassword,\n        username: this.state.username,\n      }, //optional\n    };\n\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.changePassword.status === true) {\n          this.props.alert.success(\"Changed password Succesfully Refresh\");\n          this.setState({ signup: data.data.changePassword.status });\n        } else {\n          this.props.alert.error(data.data.changePassword.msg);\n        }\n        this.setState({ message: data.data.changePassword.msg });\n\n        // console.log(data.data.createUser.status);\n        // console.log(data.createUser.status);\n      })\n      .catch((error) => console.log(`received error ${error}`));\n  }\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n    const operation = {\n      query: getUser,\n      variables: {\n        username: this.props.location.state.username,\n      }, //optional\n    };\n    console.log(this.state.username);\n    makePromise(execute(link, operation))\n      .then((data) => {\n        // console.log(`received data ${JSON.stringify(data, null, 2)}`)\n        console.log(data);\n        if (data.data.getUser) {\n          this.setState({\n            firstname: data.data.getUser.firstname,\n            lastname: data.data.getUser.lastname,\n            emailid: data.data.getUser.email,\n          });\n        } else {\n          this.props.alert.error(\"cannot fetch user data\");\n        }\n      })\n      .catch((error) => this.props.alert.error(`received error ${error}`));\n  }\n\n  componentDidMount() {\n    console.log(this.state.username);\n    console.log(this.state.authenticated);\n  }\n\n  render() {\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n    const backpaper = clsx(classes.paper, classes.background);\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          string={\"User:\" + this.state.username}\n          username={this.state.username}\n          authenticated={this.state.authenticated}\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9} direction=\"row\">\n                <Paper>\n                  <Grid container justify=\"center\" direction=\"row\" spacing={2}>\n                    <Grid\n                      item\n                      direction=\"row\"\n                      justify=\"center\"\n                      className={classes.root}\n                      xs={12}\n                      sm={6}\n                    >\n                      <Paper className={backpaper}></Paper>\n                    </Grid>\n                    <Grid\n                      item\n                      direction=\"row\"\n                      justify=\"center\"\n                      className={classes.root}\n                      xs={12}\n                      sm={6}\n                    >\n                      <Paper className={classes.paper}>\n                        <Grid container spacing={2}>\n                          <Grid item xs={12}>\n                            <Typography variant=\"h3\">Your Settings</Typography>\n                          </Grid>\n                          <Grid item xs={12} sm={6}>\n                            <TextField\n                              autoComplete=\"fname\"\n                              name=\"firstName\"\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"firstName\"\n                              label=\"First Name\"\n                              autoFocus\n                              onChange={(event) =>\n                                this.setState({\n                                  first_name: event.target.value,\n                                })\n                              }\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={6}>\n                            <TextField\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              id=\"lastName\"\n                              label=\"Last Name\"\n                              name=\"lastName\"\n                              autoComplete=\"lname\"\n                              onChange={(event) =>\n                                this.setState({ last_name: event.target.value })\n                              }\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Button\n                              type=\"submit\"\n                              fullWidth\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className={classes.submit}\n                              onClick={this.handleClickName}\n                            >\n                              Change First and Last Name\n                            </Button>\n                          </Grid>\n\n                          <Grid item xs={12} sm={6}>\n                            <TextField\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              name=\"password\"\n                              label=\"Old Password\"\n                              type=\"password\"\n                              id=\"password\"\n                              autoComplete=\"old-password\"\n                              onChange={(event) =>\n                                this.setState({\n                                  oldpassword: event.target.value,\n                                })\n                              }\n                            />\n                          </Grid>\n                          <Grid item xs={12} sm={6}>\n                            <TextField\n                              variant=\"outlined\"\n                              required\n                              fullWidth\n                              name=\"password\"\n                              label=\"New Password\"\n                              type=\"password\"\n                              id=\"password\"\n                              autoComplete=\"old-password\"\n                              onChange={(event) =>\n                                this.setState({\n                                  newpassword: event.target.value,\n                                })\n                              }\n                            />\n                          </Grid>\n                          <Grid item xs={12}>\n                            <Button\n                              type=\"submit\"\n                              fullWidth\n                              variant=\"contained\"\n                              color=\"primary\"\n                              className={classes.submit}\n                              onClick={this.handleClickPassword}\n                            >\n                              Change Password\n                            </Button>\n                          </Grid>\n                        </Grid>\n                      </Paper>\n                    </Grid>\n                  </Grid>\n                </Paper>\n              </Grid>\n              <Grid item xs={12} md={4} lg={3}>\n                <Paper className={fixedHeightPaper}>\n                  <Avatar className={classes.avatar}>\n                    <PeopleIcon />\n                  </Avatar>\n                  <Typography variant=\"h6\">\n                    <br></br>\n                    Profile Info:<br></br> Name:\n                    {this.state.firstname +\n                      ` ` +\n                      this.state.lastname} <br></br> Email: {this.state.emailid}\n                    <br></br> Username:{this.state.username}\n                  </Typography>\n                </Paper>\n              </Grid>\n              <Footer />\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withAlert()(withStyles(useStyles)(Settings));\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport { createStyles, withStyles } from \"@material-ui/core/styles\";\nimport CssBaseline from \"@material-ui/core/CssBaseline\";\nimport Box from \"@material-ui/core/Box\";\nimport Container from \"@material-ui/core/Container\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Copyright from \"./components/Copyright\";\nimport Footer from \"./components/Footer\";\nimport clsx from \"clsx\";\nimport NotesList from \"./components/NotesList\";\nimport { Typography } from \"@material-ui/core\";\nimport browndesk from \"./img/background.jpg\";\n\nconst useStyles = createStyles((theme) => ({\n  root: {\n    display: \"flex\",\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: \"100vh\",\n    overflow: \"auto\",\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: \"flex\",\n    overflow: \"auto\",\n    flexDirection: \"column\",\n    backgroundImage: `url(${browndesk})`,\n    height: \"100%\",\n    backgroundSize: \"cover\",\n    backgroundRepeat: \"no-repeat\",\n  },\n  fixedHeight: {\n    display: \"flex\",\n    alignItems: \"center\",\n  },\n}));\n\nclass Profiles extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      username: \"\",\n      authenticated: false,\n      pagename: \"settings\",\n      //   projectlist: { ongoing: null, completed: null },\n    };\n\n    // console.log(this.props.username);\n    // console.log(this.props.location.state.username);\n  }\n  // call api here to get rest of user data from backend\n  // this.handleClick = this.handleClick.bind(this);\n\n  componentWillMount() {\n    if (this.props.username !== undefined) {\n      this.setState({\n        username: this.props.username,\n        authenticated: this.props.authenticated,\n      });\n    }\n    if (this.props.location.state !== undefined) {\n      this.setState({\n        username: this.props.location.state.username,\n        authenticated: this.props.location.state.authenticated,\n      });\n    } else {\n      this.setState({\n        username: \"\",\n        authenticated: false,\n      });\n    }\n  }\n  componentDidMount() {\n    console.log(this.state.username);\n    console.log(this.state.authenticated);\n  }\n\n  render() {\n    if (this.state.authenticated === false) {\n      return <h1>Not Authenticated Go to Login Page and Login</h1>;\n    }\n    let aftermid = <NotesList username={this.state.username} />;\n    const { classes } = this.props;\n    const fixedHeightPaper = clsx(classes.paper, classes.fixedHeight);\n\n    return (\n      <div className={classes.root}>\n        <CssBaseline />\n        <Header\n          string={\"User:\" + this.state.username}\n          username={this.state.username}\n          authenticated={this.state.authenticated}\n        />\n        <main className={classes.content}>\n          <div className={classes.appBarSpacer} />\n          <Container maxWidth=\"xl\" className={classes.container}>\n            <Grid container spacing={3}>\n              <Grid item xs={12} md={8} lg={9} alignItems=\"center\">\n                <Paper className={fixedHeightPaper}>\n                  <Typography variant=\"h1\">\n                    This Page is Under Construction!.\n                  </Typography>\n                </Paper>\n              </Grid>\n              {aftermid}\n              <Footer />\n            </Grid>\n            <Box pt={4}>\n              <Copyright />\n            </Box>\n          </Container>\n        </main>\n      </div>\n    );\n  }\n}\nexport default withStyles(useStyles)(Profiles);\n","import React from \"react\";\n// import logo from \"./logo.svg\";\nimport \"./App.css\";\nimport SignUp from \"./components/Signup\";\nimport Login from \"./components/Login\";\nimport DashBoard from \"./components/DashBoard\";\nimport Projects from \"./components/Projects\";\nimport Tasks from \"./components/Tasks\";\nimport Reports from \"./components/Reports\";\nimport Analytics from \"./components/Analytics\";\nimport Settings from \"./components/Settings\";\nimport Profiles from \"./components/Profiles\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport { positions, Provider } from \"react-alert\";\n// import AlertTemplate from \"react-alert-template-basic\";\nimport red from \"@material-ui/core/colors/red\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport Alert from \"@material-ui/lab/Alert\";\nimport CloseIcon from \"@material-ui/icons/Close\";\nimport IconButton from \"@material-ui/core/IconButton\";\n// import { ApolloProvider } from \"@apollo/react-hooks\";\n// import ApolloClient from \"apollo-boost\";\n\n// const client = new ApolloClient({\n//   uri: \"http://localhost:5000/graphql-api\",\n// });\n\nconst options = {\n  timeout: 7000,\n  position: positions.BOTTOM_CENTER,\n  offset: \"10px\",\n};\nconst AlertTemplate = ({ style, options, message, close }) => (\n  <div style={style}>\n    <Alert\n      variant=\"filled\"\n      severity={options.type}\n      action={\n        <IconButton\n          aria-label=\"close\"\n          color=\"inherit\"\n          size=\"small\"\n          onClick={close}\n        >\n          <CloseIcon fontSize=\"inherit\" />\n        </IconButton>\n      }\n    >\n      {message}\n    </Alert>\n  </div>\n);\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: red,\n    secondary: blue,\n    type: \"light\",\n  },\n  status: {\n    danger: \"orange\",\n  },\n});\n\nfunction App() {\n  return (\n    // <ApolloProvider client={client}>\n    <Provider template={AlertTemplate} {...options}>\n      <ThemeProvider theme={theme}>\n        <Router>\n          <Switch>\n            {/* <Route path=\"/landing-page\" component={LandingPage} /> */}\n            {/* <Route path=\"/profile-page\" component={ProfilePage} /> */}\n            <Route path=\"/login\" component={Login} />\n            <Route path=\"/signup\" component={SignUp} />\n            <Route path=\"/dashboard\" component={DashBoard} />\n            <Route path=\"/projects\" component={Projects} />\n            <Route path=\"/tasks\" component={Tasks} />\n            <Route path=\"/reports\" component={Reports} />\n            <Route path=\"/analytics\" component={Analytics} />\n            <Route path=\"/settings\" component={Settings} />\n            <Route path=\"/profile\" component={Profiles} />\n            <Route path=\"\" component={Login} />\n          </Switch>\n        </Router>\n      </ThemeProvider>\n    </Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}